[{"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\index.tsx":"1","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\App.tsx":"2","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\store\\store.ts":"3","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\SignIn\\SignIn.tsx":"4","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Restaurant\\Restaurant.tsx":"5","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Home\\Home.tsx":"6","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Chefs\\Chefs.tsx":"7","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\LogIn\\LogIn.tsx":"8","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Chefs\\SingleChef\\SingleChef.tsx":"9","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Restaurant\\SingleRestPage\\SingleRest.tsx":"10","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\orderSlicer.tsx":"11","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\chefsSlicer.tsx":"12","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\epicureSlicer.tsx":"13","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\dishesSlicer.tsx":"14","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\restaurantSlicer.tsx":"15","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Filter\\Filter.tsx":"16","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Footer\\Footer.tsx":"17","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Navbar\\Navbar.tsx":"18","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Hero\\Hero.tsx":"19","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Restaurant\\RenderRest\\RenderRest.tsx":"20","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Home\\Icons\\icons.tsx":"21","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Card\\Card.tsx":"22","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Chefs\\ChefCard\\ChefCard.tsx":"23","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Home\\WeekChef\\WeekChef.tsx":"24","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Popular\\popular.tsx":"25","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Home\\AboutUs\\AboutUs.tsx":"26","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Restaurant\\DishesRender\\DishesRender.tsx":"27","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\CartapopUp\\CartPopUp.tsx":"28","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\FilterContainer\\FilterContainer.tsx":"29","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\FilterButtons\\Buttons.tsx":"30","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\DishModal\\DishModal.tsx":"31","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\DistanceButton\\DistanceButtons.tsx":"32","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\PriceButtons\\PriceButtons.tsx":"33","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\RatingButton\\Ratingbutton.tsx":"34","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Navbar\\MobileMenu\\MobileMenu.tsx":"35"},{"size":415,"mtime":1677758413328,"results":"36","hashOfConfig":"37"},{"size":1104,"mtime":1677758413255,"results":"38","hashOfConfig":"37"},{"size":1843,"mtime":1677758413336,"results":"39","hashOfConfig":"37"},{"size":3044,"mtime":1677758413320,"results":"40","hashOfConfig":"37"},{"size":393,"mtime":1677758413312,"results":"41","hashOfConfig":"37"},{"size":790,"mtime":1677758413279,"results":"42","hashOfConfig":"37"},{"size":360,"mtime":1677758413271,"results":"43","hashOfConfig":"37"},{"size":1811,"mtime":1677758413287,"results":"44","hashOfConfig":"37"},{"size":2057,"mtime":1677758413271,"results":"45","hashOfConfig":"37"},{"size":1360,"mtime":1677758413312,"results":"46","hashOfConfig":"37"},{"size":1012,"mtime":1677758413336,"results":"47","hashOfConfig":"37"},{"size":261,"mtime":1677758413328,"results":"48","hashOfConfig":"37"},{"size":259,"mtime":1677758413336,"results":"49","hashOfConfig":"37"},{"size":1528,"mtime":1677758413328,"results":"50","hashOfConfig":"37"},{"size":2112,"mtime":1677758413336,"results":"51","hashOfConfig":"37"},{"size":1653,"mtime":1677758413279,"results":"52","hashOfConfig":"37"},{"size":469,"mtime":1677758413279,"results":"53","hashOfConfig":"37"},{"size":3214,"mtime":1677759491243,"results":"54","hashOfConfig":"37"},{"size":619,"mtime":1677758413279,"results":"55","hashOfConfig":"37"},{"size":976,"mtime":1677758413312,"results":"56","hashOfConfig":"37"},{"size":906,"mtime":1677758413287,"results":"57","hashOfConfig":"37"},{"size":1225,"mtime":1677758413263,"results":"58","hashOfConfig":"37"},{"size":955,"mtime":1677758413271,"results":"59","hashOfConfig":"37"},{"size":1627,"mtime":1677758413287,"results":"60","hashOfConfig":"37"},{"size":1460,"mtime":1677759277550,"results":"61","hashOfConfig":"37"},{"size":1072,"mtime":1677758413279,"results":"62","hashOfConfig":"37"},{"size":2851,"mtime":1677758413312,"results":"63","hashOfConfig":"37"},{"size":2449,"mtime":1677758413263,"results":"64","hashOfConfig":"37"},{"size":2654,"mtime":1677758413255,"results":"65","hashOfConfig":"37"},{"size":849,"mtime":1677758413255,"results":"66","hashOfConfig":"37"},{"size":3891,"mtime":1677758413279,"results":"67","hashOfConfig":"37"},{"size":1305,"mtime":1677758413255,"results":"68","hashOfConfig":"37"},{"size":1729,"mtime":1677758413263,"results":"69","hashOfConfig":"37"},{"size":1598,"mtime":1677758413263,"results":"70","hashOfConfig":"37"},{"size":643,"mtime":1677759277542,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"13mm92j",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"75"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"75"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"75"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"75"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"75"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"75"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"75"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"75"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\index.tsx",[],[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\App.tsx",["193","194"],[],"import React from \"react\";\r\nimport { BrowserRouter, Routes, Route, useParams } from \"react-router-dom\";\r\nimport CartPopUp from \"./component/CartapopUp/CartPopUp\";\r\nimport Chefs from \"./component/Chefs/Chefs\";\r\nimport SingleChef from \"./component/Chefs/SingleChef/SingleChef\";\r\nimport Home from \"./component/Home/Home\";\r\nimport LogIn from \"./component/LogIn/LogIn\";\r\nimport Restaurant from \"./component/Restaurant/Restaurant\";\r\nimport SingleRest from \"./component/Restaurant/SingleRestPage/SingleRest\";\r\nimport SignIn from \"./component/SignIn/SignIn\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/restaurant\" element={<Restaurant />} />\r\n        <Route path=\"restaurant/:restName\" element={<SingleRest />} />\r\n        <Route path=\"/chefs\" element={<Chefs />} />\r\n        <Route path=\"chefs/:chefName\" element={<SingleChef />} />\r\n        <Route path=\"/log-in\" element={<LogIn />} />\r\n        <Route path=\"/sign-in\" element={<SignIn />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\store\\store.ts",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\SignIn\\SignIn.tsx",["195","196","197","198","199","200"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./SignIn.css\";\r\n\r\nconst SignIn: React.FC = () => {\r\n  const [email, setEmail]: [string, Dispatch<SetStateAction<string>>] = useState(\"\");\r\n  const [firstName, setFirstName]: [string, Dispatch<SetStateAction<string>>] = useState(\"\");\r\n  const [lastName, setLastName]: [string, Dispatch<SetStateAction<string>>] = useState(\"\");\r\n  const [address, setAddress]: [string, Dispatch<SetStateAction<string>>] = useState(\"\");\r\n  const [phone, setPhone]: [string, Dispatch<SetStateAction<string>>] = useState(\"\");\r\n  const [password, setPassword]: any = useState(\"\");\r\n  const [black, setBlack]: [string, Dispatch<SetStateAction<string>>] =\r\n    useState(\"\");\r\n  const emailOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const passwordOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (password != \"\" && email != \"\" && firstName != \"\" && lastName != \"\" && address != \"\" && phone != \"\") {\r\n      setBlack(\"black-style\");\r\n    } else {\r\n      setBlack(\"\");\r\n    }\r\n  }, [email, password, firstName, lastName, address, phone]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div id=\"sign-container\">\r\n        <div id=\"sign-main\">\r\n          <div id=\"sign-title\">\r\n            <h1>Sign in</h1>\r\n            <h2>Please enter your details</h2>\r\n          </div>\r\n          <form id=\"sign-details\" action=\"\">\r\n            <label htmlFor=\"\">First Name</label>\r\n            <input onChange={(e) => setFirstName(e.target.value)}\r\n              type=\"text\"\r\n              name=\"first-name\"\r\n              placeholder=\"Enter Your First Name\"\r\n            />\r\n            <label htmlFor=\"\">Last Name</label>\r\n            <input onChange={(e) => setLastName(e.target.value)}\r\n              type=\"text\"\r\n              name=\"last-name\"\r\n              placeholder=\"Enter Your Last Name\"\r\n            />\r\n            <label htmlFor=\"\">Address</label>\r\n            <input onChange={(e) => setAddress(e.target.value)}\r\n              type=\"text\"\r\n              name=\"Address\"\r\n              placeholder=\"Enter Your Address\"\r\n            />\r\n            <label htmlFor=\"\">Phone</label>\r\n            <input onChange={(e) => setPhone(e.target.value)} type=\"text\" name=\"Address\" placeholder=\"Enter Your Phone Number\" />\r\n            <label htmlFor=\"\">Email</label>\r\n            <input onChange={emailOnChange} type=\"text\" name=\"email\" placeholder=\"Email address\" />\r\n            <label htmlFor=\"\">Password</label>\r\n            <input onChange={passwordOnChange} type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n          </form>\r\n            <button id={black} className=\"sign-in-btn\">\r\n              SIGN UP\r\n            </button>\r\n          <section></section>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Restaurant\\Restaurant.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Home\\Home.tsx",["201"],[],"import React from \"react\";\r\nimport Hero from \"../Hero/Hero\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Popular from \"../Popular/popular\";\r\nimport data from '../../epicure.json'\r\nimport Icons from \"./Icons/icons\";\r\nimport WeekChef from \"./WeekChef/WeekChef\";\r\nimport AboutUs from \"./AboutUs/AboutUs\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home: React.FC=()=>{\r\n    const navigate = useNavigate();\r\n\r\n    return(<>\r\n        <Navbar />\r\n        <Hero />\r\n        <Popular  kind ={data.restaurant} header=\"popular restaurant in epicure:\"/>\r\n        <Popular kind ={data.dishes} header=\"SIGNATURE DISH OF:\" />\r\n        <Icons />\r\n        <WeekChef />\r\n        <AboutUs />\r\n        <Footer />\r\n    </>)\r\n\r\n}\r\n\r\nexport default Home","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Chefs\\Chefs.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\LogIn\\LogIn.tsx",["202","203"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Footer from '../Footer/Footer'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport './LogIn.css'\r\n\r\n const LogIn:React.FC = () => {\r\n    const navigate = useNavigate()\r\n    const [email,setEmail]:[string, Dispatch<SetStateAction<string>>] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    \r\n    const [black,setBlack]:[string, Dispatch<SetStateAction<string>>] = useState(\"\")\r\n    const emailOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const passwordOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value)\r\n    }\r\n    useEffect(() => {\r\n        if (password != \"\" && email != \"\"){\r\n            setBlack(\"black-style\")\r\n        } else {\r\n            setBlack(\"\")\r\n        }\r\n    },[email, password])\r\n\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div id='login-container'>\r\n    <div id='login-main'>\r\n        <div id='title'>\r\n        <h1>Log in</h1>\r\n        <h2>To continue the order, please sign in</h2>\r\n        </div>\r\n        <form id='login-details' action=\"\">\r\n            <input onChange={emailOnChange} type=\"text\" name='email' placeholder='Email address' />\r\n            <input onChange={passwordOnChange} type=\"password\" name='password' placeholder='Password' />\r\n            <button className='login-btn' id={black} type='submit'>LOGIN</button>\r\n            <p>Forget password?</p>\r\n        </form>\r\n        <section>\r\n        <hr /><p>or</p> <hr />\r\n        </section>\r\n        <button onClick={() => navigate(\"/sign-in\")} id='sign-in-btn'>SIGN UP</button>\r\n    </div>\r\n    </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LogIn","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Chefs\\SingleChef\\SingleChef.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Restaurant\\SingleRestPage\\SingleRest.tsx",["204"],[],"import React from \"react\";\r\nimport \"./SingleRest.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IRootState } from \"../../../store/store/store\";\r\nimport Card from \"../../Card/Card\";\r\nimport DishesRender from \"../DishesRender/DishesRender\";\r\nimport Navbar from \"../../Navbar/Navbar\";\r\n\r\nconst SingleRest: React.FC<any> = (props) => {\r\n  let { restName } = useParams();\r\n  const restArray = useSelector((state: IRootState) => state.restaurants.value);\r\n  let restIndex = restArray.findIndex((e: any) => e.name === restName);\r\n  let d = new Date();\r\n  const specificRest = restArray[restIndex]\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div id=\"main\">\r\n        <Card\r\n          class=\"single-rest\"\r\n          img={specificRest.img}\r\n          name={specificRest.name}\r\n          chef={specificRest.chef} id={specificRest.id}\r\n          navigatePath = {\"\"}\r\n        />\r\n        {specificRest.openDays.findIndex((e) => e === d.getDay()) !==\r\n          -1 &&\r\n        specificRest.openHours[0] < d.getHours() &&\r\n        specificRest.openHours[1] > d.getHours() ? (\r\n          <div>\r\n            <img className=\"open-now\" src=\"/image/icons/open now.svg\" />\r\n          </div>\r\n        ) : null}\r\n        <DishesRender restName={restName} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleRest;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\orderSlicer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\chefsSlicer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\epicureSlicer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\dishesSlicer.tsx",["205","206","207","208"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { stat } from \"fs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport data from \"../../epicure.json\";\r\nimport { IRootState } from \"../store/store\";\r\nimport { restaurantSlice } from \"./restaurantSlicer\";\r\n\r\nexport const dishesSlicer = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    value: data.dishes,\r\n    allDishes : data.dishes,\r\n    specificDishes: data.dishes,\r\n    restaurants: data.restaurant\r\n  },\r\n  reducers: {\r\n    getDishesByRestId: (state,action) => {\r\n      state.specificDishes = state.allDishes.filter((dish) => dish.restaurantId === state.restaurants.find((rest) => rest.name === action.payload)?.id)\r\n    },\r\n\r\n    dishTimeFilter: (state,action) => {\r\n      switch (action.payload) {\r\n        case \"Breakfast\":\r\n          state.value = state.specificDishes.filter((dish) =>\r\n            dish.time.find((time) => time === \"breakfast\")\r\n            );\r\n          break;\r\n        case \"Lunch\":\r\n          state.value = state.specificDishes.filter((dish) =>\r\n            dish.time.find((time) => time === \"lunch\")\r\n          );\r\n\r\n          break;\r\n        case \"Dinner\":\r\n          state.value = state.specificDishes.filter((dish) =>\r\n            dish.time.find((time) => time === \"dinner\")\r\n          );\r\n          break;\r\n        default:\r\n          state.value = state.specificDishes;\r\n          break;\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const {dishTimeFilter,  getDishesByRestId} = dishesSlicer.actions\r\nexport default dishesSlicer.reducer;","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\store\\slicer\\restaurantSlicer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Filter\\Filter.tsx",["209","210","211","212","213","214","215","216"],[],"import React, { useEffect } from \"react\";\r\nimport {MouseEvent} from \"react\"\r\nimport FilterButtons from \"../Buttons/FilterButtons/Buttons\";\r\nimport \"./Filter.css\";\r\nimport { useState } from \"react\";\r\nimport RenderRest from \"../Restaurant/RenderRest/RenderRest\";\r\nimport ChefCard from \"../Chefs/ChefCard/ChefCard\";\r\nimport FilterContainer from \"../Buttons/FilterContainer/FilterContainer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mainFilter } from \"../../store/slicer/restaurantSlicer\";\r\n\r\ninterface IRender {\r\n  toRender: string;\r\n}\r\nconst Filter: React.FC<any> = (props: any) => {\r\n  const btnNames:string[] = [\"All\", \"New\", \"Most Popular\", \"Open Now\", \"Map View\", \"Most View\"]\r\n  const dispatch = useDispatch();\r\n  const [filter, setFilter] = useState(\"All\");\r\n  dispatch(mainFilter(filter));\r\n\r\n  useEffect(() => {\r\n    dispatch(mainFilter(filter));\r\n\r\n  }, [filter]);\r\n\r\n  const filterEvent= (e:Event):void => {\r\n    const target = e.target as HTMLInputElement;\r\n    setFilter(target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"main-filter\">\r\n        <div id=\"filter-div\">\r\n          {btnNames.map((btn, index:number)=>(\r\n            props.toRender ?\r\n           (index<5) && <FilterButtons\r\n              name={btn}\r\n              onClick={filterEvent}\r\n            /> : (index != 2 && index != 3 && index != 4) &&  <FilterButtons\r\n            name={btn}\r\n            onClick={filterEvent}\r\n          />\r\n          ))}\r\n        </div>\r\n        {props.toRender && (\r\n          <div id=\"range-div\">\r\n            <FilterContainer name={\"\"} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Footer\\Footer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Navbar\\Navbar.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Hero\\Hero.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Restaurant\\RenderRest\\RenderRest.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Home\\Icons\\icons.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Card\\Card.tsx",["217","218","219"],[],"import React, { ReactNode } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ICard } from \"../../interFaces/interFaces\";\r\nimport \"./Card.css\";\r\n\r\nconst  Card: React.FC <ICard> = (props: ICard) => {\r\n  const navigate = useNavigate();\r\n  const onCardClick = (navigatePath?: string) => {\r\n    navigate(navigatePath ? navigatePath : \"\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className={props.class} onClick={(e) => props.navigatePath ? onCardClick(props.navigatePath) : props.onClick(e)}>\r\n        {props.img ? <img className=\"img-rest food\" src={props.img}/> : <img className=\"img-dish food\" src={props.img}/>}\r\n        <div className=\"card-downer-div\">\r\n          <h1>{props.name} </h1>\r\n          \r\n          {props.icons ?<section>{ props.icons?.map((source:string, index:number)=> <img className=\"icon\" src={source} key={index} alt=\"icon\" />)}</section> : null}\r\n          \r\n          <p id=\"about-dish\">{props.chef ? props.chef : props.about}</p>\r\n            {props.chef ? <img className=\"rating\" src={props.rating} alt=\"rating\"/> : null}\r\n            {props.price ? <div ><hr /><p>₪{props.price}</p><hr /></div> : null }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default  Card;","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Chefs\\ChefCard\\ChefCard.tsx",["220"],[],"import React from \"react\";\r\nimport \"./ChefCard.css\";\r\nimport data from \"../../../epicure.json\";\r\nimport { IChefCard } from \"../../../interFaces/interFaces\";\r\nimport {useSelector} from \"react-redux\"\r\nimport { IRootState } from \"../../../store/store/store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ChefCard: React.FC = () => {\r\n  const chefsArray = useSelector(\r\n    (state:IRootState) => state.chefs.value\r\n  )\r\n  const navigate = useNavigate();\r\n  const onCardClick = (navigatePath?: string) => {\r\n    navigate(navigatePath ? navigatePath : \"\");\r\n  };\r\n  return (\r\n    <>\r\n      <div  id=\"main-chef\">\r\n        {chefsArray.map((chef: IChefCard, index: number) => (\r\n          <section id=\"chef-section\" onClick={() => onCardClick(chef.name)}>\r\n            <img src={chef.img} key={index} alt={chef.name} />\r\n            <h1>{chef.name}</h1>\r\n          </section>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChefCard;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Home\\WeekChef\\WeekChef.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Popular\\popular.tsx",["221"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Home\\AboutUs\\AboutUs.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Restaurant\\DishesRender\\DishesRender.tsx",["222","223","224"],[],"import React, { Dispatch, SetStateAction, useEffect, useRef } from \"react\";\r\nimport \"./DishesRender.css\";\r\nimport FilterButtons from \"../../Buttons/FilterButtons/Buttons\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../../../store/store/store\";\r\nimport Card from \"../../Card/Card\";\r\nimport { ICard } from \"../../../interFaces/interFaces\";\r\nimport {\r\n  dishTimeFilter,\r\n  getDishesByRestId,\r\n} from \"../../../store/slicer/dishesSlicer\";\r\nimport DishModal from \"../../DishModal/DishModal\";\r\n\r\nexport interface IRestName {\r\n  sortFilter?: string;\r\n  restName?: string;\r\n}\r\n\r\nconst DishesRender: React.FC<IRestName> = (props: IRestName) => {\r\n  const specificDishes = useSelector(\r\n    (state: IRootState) => state.dishes.specificDishes\r\n  );\r\n  const filteredDishes = useSelector(\r\n    (state: IRootState) => state.dishes.value\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [dishId, setDishId]:[number | undefined,Dispatch<SetStateAction<number | undefined>>] = useState()\r\n  \r\n  let dishModalRef:any = useRef()\r\n    useEffect(()=>{\r\n        let handler = (event:any) =>{\r\n            if(!dishModalRef?.current?.contains(event.target)){\r\n              setIsOpen(false)\r\n            }\r\n        }\r\n        document.addEventListener(\"mousedown\",handler)\r\n\r\n        return () => {\r\n          document.removeEventListener(\"mousedown\",handler)\r\n        }\r\n    })\r\n\r\n  useEffect(() => {\r\n    dispatch(getDishesByRestId(props.restName));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(dishTimeFilter(filter));\r\n  }, [filter]);\r\n\r\n  const filterEvent = (e: Event): void => {\r\n    const target = e.target as HTMLInputElement;\r\n    setFilter(target.value);\r\n  };\r\n  const openModal = (id:any):void => {\r\n    setIsOpen(!isOpen)\r\n    setDishId(id)\r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"main-dishes\">\r\n        <div id=\"filter-dish\">\r\n          <FilterButtons name=\"Breakfast\" onClick={filterEvent} />\r\n          <FilterButtons name=\"Lunch\" onClick={filterEvent} />\r\n          <FilterButtons name=\"Dinner\" onClick={filterEvent} />\r\n        </div>\r\n      </div>\r\n      <div className=\"dish-div\" >\r\n        {filteredDishes?.map((dish: ICard, index: number) => (\r\n          <>\r\n          <Card\r\n            key={index}\r\n            name={dish.name}\r\n            img={dish.img}\r\n            about={dish.about}\r\n            price={dish.price}\r\n            class=\"card\"\r\n            onClick = {() => openModal(dish.id)}\r\n            id={dish.id}\r\n            />\r\n          </>\r\n          ))}\r\n      </div>\r\n          {isOpen && <DishModal refProps={dishModalRef} onClose={openModal} open={isOpen} id={dishId} restaurantName={props.restName}/>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DishesRender;\r\n\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\CartapopUp\\CartPopUp.tsx",["225","226","227","228","229"],[],"import React, { HtmlHTMLAttributes, useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RefactorActionInfo } from 'typescript'\r\nimport { deleteFromCart } from '../../store/slicer/orderSlicer'\r\nimport { IOrderState, IRootState } from '../../store/store/store'\r\nimport \"./CartPopUp.css\"\r\n\r\nexport interface ICartModal{\r\n    refprops:any\r\n}\r\n\r\nconst CartPopUp: React.FC<ICartModal> = (props:ICartModal)=> {\r\n    const dispatch = useDispatch()\r\n    const dishesInCart = useSelector((state: IRootState) => state.order.value);\r\n    const checkoutPrice = useSelector((state: IRootState) => state.order.checkoutPrice);\r\n    const [checkOut, setCheckOut] = useState(0)\r\n    useEffect(() => {\r\n        setCheckOut( checkOut + checkoutPrice)\r\n         },[])\r\n\r\n  return (\r\n    <div ref={props.refprops} id='cart-container'>\r\n        <h1>YOUR ORDER</h1>\r\n{ dishesInCart[0] ?  <><h2>{dishesInCart[0].restaurantName}</h2>\r\n        <div id='dish-in-cart'>\r\n        {dishesInCart.map((dish:IOrderState,index:number)=> {\r\n         return   <div key={index} id='single-dish'>\r\n                <img src={dish.img} alt={dish.name} />\r\n                <div id='mid-div'>\r\n                    <div id='mid-up'>\r\n                        <div id='amount'>{dish.quantity}</div>\r\n                        <div id='dish-name'>\r\n                            <h3>{dish.name}</h3>\r\n                            <p>₪{dish.totalPrice}.00</p>\r\n                        </div>\r\n                    </div>\r\n                    <div id='mid-down'>\r\n                        {dish.info && dish.info.map((info:string) => info !== \"\" && (<><p>{info}</p><hr /></>) \r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div id='right-div'><button onClick={() =>dispatch(deleteFromCart(dish.dishId))} id='delete'>X</button><p>₪{dish.price}</p></div>\r\n            </div>\r\n        })}\r\n        </div>\r\n        <hr id='mid-hr'/>\r\n        <div id='cart-input'>\r\n            <h3>Add A Comment</h3>\r\n            <textarea placeholder='Special requests, allergies, deary restrictions, etc.'></textarea>\r\n\r\n        </div></> : <img src='/image/icons/empty bag.svg' />}\r\n        <div id='btn-div'>\r\n            <button id='checkout-btn'>CHECKOUT ₪{checkOut}</button>\r\n            <button id='history-btn'>ORDER HISTORY</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartPopUp\r\n\r\n\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\FilterContainer\\FilterContainer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\FilterButtons\\Buttons.tsx",["230"],[],"import React from \"react\";\r\nimport { IButtons } from \"../../../interFaces/interFaces\";\r\nimport \"./Buttons.css\";\r\nimport styled from \"styled-components\";\r\nimport { mainFilter } from \"../../../store/slicer/restaurantSlicer\";\r\n\r\nexport const SimpleButtons = styled.button`\r\n  font-family: \"Helvetica light\";\r\n  font-size: 1.2vw;\r\n  cursor: pointer;\r\n  border-radius: 6px;\r\n  border: none;\r\n  font-weight: 300;\r\n  &:hover {\r\n    font-weight: bolder;\r\n  }\r\n  &:focus {\r\n    font-family: \"Helvetica medium\";\r\n    font-weight: bolder;\r\n  }\r\n`;\r\n\r\n\r\nconst FilterButtons: React.FC<IButtons> = (props: IButtons) => {\r\n\r\n  return (\r\n    <>\r\n      <SimpleButtons\r\n        id={props.name}\r\n        value={props.name}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.name}\r\n      </SimpleButtons>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterButtons;\r\n\r\n\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\DishModal\\DishModal.tsx",["231","232","233"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport \"./DishModal.css\";\r\nimport Card from \"../Card/Card\";\r\nimport { ICard, IModal } from \"../../interFaces/interFaces\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IDishes, IOrderState, IRootState } from \"../../store/store/store\";\r\nimport { addToCart } from \"../../store/slicer/orderSlicer\";\r\n\r\nconst DishModal: React.FC<IModal> = (props: IModal) => {\r\n  const clickedDish = useSelector((state: IRootState) =>\r\n    state.dishes.value.find((dish) => dish.id === props.id)\r\n  );\r\n  const dispatch = useDispatch();\r\n  // adding the user changes\r\n  const [changes, setChanges] = useState<string[]>([]);\r\n  const handleChanges = (event: any) => {\r\n    const option = event.target.value;\r\n    const isChecked = event.target.checked;\r\n    if (isChecked) {\r\n      setChanges([...changes, option]);\r\n    } else {\r\n      setChanges(changes.filter((changes) => changes !== option));\r\n    }\r\n  };\r\n  // adding the user side choice\r\n  const [sideChoice, setSideChoice]: [\r\n    string,\r\n    Dispatch<SetStateAction<string>>\r\n  ] = useState<string>(\"\");\r\n  const handelSides = (event: any) => {\r\n    const option = event.target.value;\r\n    setSideChoice(option);\r\n  };\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  // const [userDishForCart, setUserDishForCart] = useState()\r\n\r\n  const userDishForCart: IOrderState = {\r\n    dishId: clickedDish?.id,\r\n    restaurantId: clickedDish?.restaurantId,\r\n    price: clickedDish?.price,\r\n    totalPrice: clickedDish && clickedDish.price * quantity,\r\n    quantity: quantity,\r\n    info: [...changes, sideChoice],\r\n    img: clickedDish?.img,\r\n    name: clickedDish?.name,\r\n    restaurantName: props.restaurantName,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"modal-content\">\r\n        <div ref={props.refProps} id=\"modal\">\r\n          <button id=\"close\" onClick={props.onClose}>\r\n            X\r\n          </button>\r\n          <Card\r\n            img={clickedDish?.img}\r\n            name={clickedDish?.name}\r\n            about={clickedDish?.about}\r\n            icons={clickedDish?.icons}\r\n            price={clickedDish?.price}\r\n          />\r\n          <div id=\"modal-bottom\">\r\n            <form>\r\n              <h1>Choose a side</h1>\r\n              {clickedDish?.sides.map((side, index: number) => (\r\n                <label key={index} htmlFor=\"\">\r\n                  <input\r\n                    onChange={handelSides}\r\n                    name=\"sides\"\r\n                    value={side}\r\n                    type=\"radio\"\r\n                  />\r\n                  {side}\r\n                </label>\r\n              ))}\r\n            </form>\r\n            <form>\r\n              <h1>Changes</h1>\r\n              {clickedDish?.changes.map((change, index: number) => (\r\n                <label key={index} htmlFor=\"\">\r\n                  <input\r\n                    onChange={handleChanges}\r\n                    value={change}\r\n                    type=\"checkbox\"\r\n                  />\r\n                  {change}\r\n                </label>\r\n              ))}\r\n            </form>\r\n            <div id=\"quantity\">\r\n              <h1>Quantity</h1>\r\n              <div>\r\n                <button onClick={() => setQuantity((quantity) => quantity - 1)}>\r\n                  <img src=\"/image/icons/minus.svg\" alt=\"minus\" />\r\n                </button>\r\n                <p>{quantity}</p>\r\n                <button onClick={() => setQuantity((quantity) => quantity + 1)}>\r\n                  <img src=\"/image/icons/plus.svg\" alt=\"plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => dispatch(addToCart(userDishForCart))}\r\n              id=\"cart-btn\"\r\n            >\r\n              ADD TO CART\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DishModal;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\DistanceButton\\DistanceButtons.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\PriceButtons\\PriceButtons.tsx",["234"],[],"import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { IButtons } from \"../../../interFaces/interFaces\";\r\nimport {  } from \"../../../store/slicer/restaurantSlicer\";\r\nimport \"./PriceButton.css\"\r\n\r\nexport const SortButtons = styled.input`\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  height: 2px;\r\n  width: 17vw;\r\n  background-color: #c6c6c6;\r\n  pointer-events: none;\r\n  &::-webkit-slider-thumb {\r\n  }\r\n`;\r\n\r\nexport const PriceButton:React.FC<IButtons> = (props: IButtons) => {\r\n  const dispatch = useDispatch()\r\n    const [minValue, setMinValue] = useState(10);\r\n    const onChangeMinValue = (e:React.ChangeEvent<HTMLInputElement>):void =>{\r\n      const minTarget = Number(e.target.value)\r\n      setMinValue(minTarget)\r\n    }\r\n\r\n    const [maxValue, setMaxValue] = useState(357);\r\n    const onChangeMaxValue = (e:React.ChangeEvent<HTMLInputElement>):void =>{\r\n      const maxTarget = Number(e.target.value)\r\n      setMaxValue(maxTarget)\r\n    }\r\n  \r\n    return (\r\n        <div ref={props.refProps} className=\"price-popup\">\r\n          <h2>{props.name} selected</h2>\r\n          { minValue < maxValue ? <p>₪{minValue} - ₪{maxValue}</p>  : <p>₪{maxValue}- ₪{minValue}</p>  }\r\n          <div id={props.name} className=\"slider-div\" >\r\n            <section><p>₪{minValue}</p><p>₪{maxValue}</p></section>\r\n            <SortButtons className=\"price-input\" id=\"from-slider\" value={minValue} min={12} max={357} type=\"range\" onChange={onChangeMinValue} />\r\n            <SortButtons className=\"price-input\" id=\"to-slider\" value={maxValue} min={12} max={357}  type=\"range\" onChange={onChangeMaxValue} />\r\n          </div>\r\n        </div>\r\n    );\r\n  };","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Buttons\\RatingButton\\Ratingbutton.tsx",["235","236"],[],"import { RecordWithTtl } from \"dns\";\r\nimport React, { useState } from \"react\";\r\nimport { IButtons } from \"../../../interFaces/interFaces\";\r\nimport \"./RatingButton.css\";\r\n\r\n\r\nconst RatingButton: React.FC<IButtons> = (props:IButtons) => {\r\n  const [rating, setRating]:[number, React.Dispatch<React.SetStateAction<number>>] = useState(1)\r\n  const onChangeRatingValue = (e:React.ChangeEvent<HTMLInputElement>): void => {\r\n    const ratingTarget = Number(e.target.value)\r\n    setRating(ratingTarget);\r\n  };\r\n      return (<>\r\n      <div ref={props.refProps} className=\"rating-popup \">\r\n          <h2>{props.name}</h2>\r\n          <div id={props.name} className=\"rating-div\" >\r\n            <form action=\"\">\r\n            <label><input type=\"checkbox\" value={1} className=\"checkbox\" onChange={onChangeRatingValue} /><img className=\"stars\" src=\"/image/rating/1.svg\" alt=\"1 star\"  /></label>\r\n            <label><input type=\"checkbox\" value={2} className=\"checkbox\" /><img className=\"stars\" src=\"/image/rating/2.svg\" alt=\"2 star\"  /></label>\r\n            <label><input type=\"checkbox\" value={3} className=\"checkbox\" /><img className=\"stars\" src=\"/image/rating/3.svg\" alt=\"3 star\"  /></label>\r\n            <label><input type=\"checkbox\" value={4} className=\"checkbox\" /><img className=\"stars\" src=\"/image/rating/4.svg\" alt=\"4 star\"  /></label>\r\n            <label><input type=\"checkbox\" value={5} className=\"checkbox\" /><img className=\"stars\" src=\"/image/rating/5.svg\" alt=\"5 star\"  /></label>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        </>\r\n      )\r\n    }\r\n\r\nexport default RatingButton;","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\src\\component\\Navbar\\MobileMenu\\MobileMenu.tsx",[],[],{"ruleId":"237","severity":1,"message":"238","line":2,"column":40,"nodeType":"239","messageId":"240","endLine":2,"endColumn":49},{"ruleId":"237","severity":1,"message":"241","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":22,"column":18,"nodeType":"244","messageId":"245","endLine":22,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":22,"column":33,"nodeType":"244","messageId":"245","endLine":22,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":22,"column":52,"nodeType":"244","messageId":"245","endLine":22,"endColumn":54},{"ruleId":"242","severity":1,"message":"243","line":22,"column":70,"nodeType":"244","messageId":"245","endLine":22,"endColumn":72},{"ruleId":"242","severity":1,"message":"243","line":22,"column":87,"nodeType":"244","messageId":"245","endLine":22,"endColumn":89},{"ruleId":"242","severity":1,"message":"243","line":22,"column":102,"nodeType":"244","messageId":"245","endLine":22,"endColumn":104},{"ruleId":"237","severity":1,"message":"246","line":13,"column":11,"nodeType":"239","messageId":"240","endLine":13,"endColumn":19},{"ruleId":"242","severity":1,"message":"243","line":20,"column":22,"nodeType":"244","messageId":"245","endLine":20,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":20,"column":37,"nodeType":"244","messageId":"245","endLine":20,"endColumn":39},{"ruleId":"247","severity":1,"message":"248","line":32,"column":13,"nodeType":"249","endLine":32,"endColumn":73},{"ruleId":"237","severity":1,"message":"250","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":14},{"ruleId":"237","severity":1,"message":"251","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":21},{"ruleId":"237","severity":1,"message":"252","line":5,"column":10,"nodeType":"239","messageId":"240","endLine":5,"endColumn":20},{"ruleId":"237","severity":1,"message":"253","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":25},{"ruleId":"237","severity":1,"message":"254","line":2,"column":9,"nodeType":"239","messageId":"240","endLine":2,"endColumn":19},{"ruleId":"237","severity":1,"message":"255","line":6,"column":8,"nodeType":"239","messageId":"240","endLine":6,"endColumn":18},{"ruleId":"237","severity":1,"message":"256","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":16},{"ruleId":"237","severity":1,"message":"257","line":12,"column":11,"nodeType":"239","messageId":"240","endLine":12,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":24,"column":6,"nodeType":"260","endLine":24,"endColumn":14,"suggestions":"261"},{"ruleId":"242","severity":1,"message":"243","line":39,"column":25,"nodeType":"244","messageId":"245","endLine":39,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":39,"column":39,"nodeType":"244","messageId":"245","endLine":39,"endColumn":41},{"ruleId":"242","severity":1,"message":"243","line":39,"column":53,"nodeType":"244","messageId":"245","endLine":39,"endColumn":55},{"ruleId":"237","severity":1,"message":"262","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":14,"column":22,"nodeType":"249","endLine":14,"endColumn":70},{"ruleId":"247","severity":1,"message":"248","line":14,"column":73,"nodeType":"249","endLine":14,"endColumn":121},{"ruleId":"237","severity":1,"message":"263","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":12},{"ruleId":"258","severity":1,"message":"264","line":17,"column":6,"nodeType":"260","endLine":17,"endColumn":8,"suggestions":"265"},{"ruleId":"237","severity":1,"message":"266","line":21,"column":9,"nodeType":"239","messageId":"240","endLine":21,"endColumn":23},{"ruleId":"258","severity":1,"message":"267","line":48,"column":6,"nodeType":"260","endLine":48,"endColumn":8,"suggestions":"268"},{"ruleId":"258","severity":1,"message":"259","line":52,"column":6,"nodeType":"260","endLine":52,"endColumn":14,"suggestions":"269"},{"ruleId":"237","severity":1,"message":"270","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":35},{"ruleId":"237","severity":1,"message":"271","line":1,"column":48,"nodeType":"239","messageId":"240","endLine":1,"endColumn":54},{"ruleId":"237","severity":1,"message":"272","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":28},{"ruleId":"258","severity":1,"message":"273","line":19,"column":12,"nodeType":"260","endLine":19,"endColumn":14,"suggestions":"274"},{"ruleId":"247","severity":1,"message":"248","line":51,"column":21,"nodeType":"249","endLine":51,"endColumn":61},{"ruleId":"237","severity":1,"message":"275","line":5,"column":10,"nodeType":"239","messageId":"240","endLine":5,"endColumn":20},{"ruleId":"237","severity":1,"message":"276","line":1,"column":43,"nodeType":"239","messageId":"240","endLine":1,"endColumn":52},{"ruleId":"237","severity":1,"message":"277","line":4,"column":10,"nodeType":"239","messageId":"240","endLine":4,"endColumn":15},{"ruleId":"237","severity":1,"message":"278","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":17},{"ruleId":"237","severity":1,"message":"279","line":20,"column":9,"nodeType":"239","messageId":"240","endLine":20,"endColumn":17},{"ruleId":"237","severity":1,"message":"280","line":1,"column":10,"nodeType":"239","messageId":"240","endLine":1,"endColumn":23},{"ruleId":"237","severity":1,"message":"281","line":8,"column":10,"nodeType":"239","messageId":"240","endLine":8,"endColumn":16},"@typescript-eslint/no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'CartPopUp' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'navigate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'stat' is defined but never used.","'useSelector' is defined but never used.","'IRootState' is defined but never used.","'restaurantSlice' is defined but never used.","'MouseEvent' is defined but never used.","'RenderRest' is defined but never used.","'ChefCard' is defined but never used.","'IRender' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["282"],"'ReactNode' is defined but never used.","'data' is defined but never used.","React Hook useEffect has a missing dependency: 'kind'. Either include it or remove the dependency array.",["283"],"'specificDishes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.restName'. Either include them or remove the dependency array.",["284"],["285"],"'HtmlHTMLAttributes' is defined but never used.","'useRef' is defined but never used.","'RefactorActionInfo' is defined but never used.","React Hook useEffect has missing dependencies: 'checkOut' and 'checkoutPrice'. Either include them or remove the dependency array. You can also do a functional update 'setCheckOut(c => ...)' if you only need 'checkOut' in the 'setCheckOut' call.",["286"],"'mainFilter' is defined but never used.","'useEffect' is defined but never used.","'ICard' is defined but never used.","'IDishes' is defined but never used.","'dispatch' is assigned a value but never used.","'RecordWithTtl' is defined but never used.","'rating' is assigned a value but never used.",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"287","fix":"293"},{"desc":"294","fix":"295"},"Update the dependencies array to be: [dispatch, filter]",{"range":"296","text":"297"},"Update the dependencies array to be: [kind]",{"range":"298","text":"299"},"Update the dependencies array to be: [dispatch, props.restName]",{"range":"300","text":"301"},{"range":"302","text":"297"},"Update the dependencies array to be: [checkOut, checkoutPrice]",{"range":"303","text":"304"},[874,882],"[dispatch, filter]",[576,578],"[kind]",[1606,1608],"[dispatch, props.restName]",[1679,1687],[800,802],"[checkOut, checkoutPrice]"]