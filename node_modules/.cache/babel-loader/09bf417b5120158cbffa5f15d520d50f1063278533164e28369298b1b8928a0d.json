{"ast":null,"code":"import _toConsumableArray from\"C:/Users/erana/Documents/gitHub.io/epicure-project/epicure/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from\"@reduxjs/toolkit\";import data from\"../../epicure.json\";export var orderSlicer=createSlice({name:\"order\",initialState:{allDishes:data.dishes,value:[],checkoutPrice:0},reducers:{addToCart:function addToCart(state,action){if(state.value.every(function(dish){return dish.restaurantId===action.payload.restaurantId;})){state.value=[].concat(_toConsumableArray(state.value),[action.payload]);console.log(state.value);state.checkoutPrice+=action.payload.totalPrice;}else{alert(\"we can`t do order from more then 0ne restaurant\");}},deleteFromCart:function deleteFromCart(state,action){// const x = state.value.findIndex((dish) => dish.dishId === action.payload)\n// delete state.value[x]\n}}});var _orderSlicer$actions=orderSlicer.actions,addToCart=_orderSlicer$actions.addToCart,deleteFromCart=_orderSlicer$actions.deleteFromCart;export{addToCart,deleteFromCart};export default orderSlicer.reducer;","map":{"version":3,"names":["createSlice","data","orderSlicer","name","initialState","allDishes","dishes","value","checkoutPrice","reducers","addToCart","state","action","every","dish","restaurantId","payload","console","log","totalPrice","alert","deleteFromCart","actions","reducer"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/epicure/src/store/slicer/orderSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport data from \"../../epicure.json\";\r\nimport { IOrder, IOrderState } from \"../store/store\";\r\n\r\nexport const orderSlicer = createSlice({\r\n  name: \"order\",\r\n  initialState: {\r\n    allDishes: data.dishes,\r\n    value: [],\r\n    checkoutPrice:0,\r\n  },\r\n  reducers: {\r\n    addToCart:(state:IOrder,action) => {\r\n        if(state.value.every((dish:IOrderState) => dish.restaurantId === action.payload.restaurantId)){\r\n            state.value = [...state.value, action.payload]\r\n            console.log(state.value)\r\n            state.checkoutPrice += action.payload.totalPrice\r\n        } else {\r\n            alert(\"we can`t do order from more then 0ne restaurant\")\r\n        }\r\n    },\r\n    deleteFromCart:(state:IOrder,action) =>{\r\n        // const x = state.value.findIndex((dish) => dish.dishId === action.payload)\r\n        // delete state.value[x]\r\n    }\r\n  },\r\n});\r\n\r\nexport const {addToCart, deleteFromCart} = orderSlicer.actions\r\nexport default orderSlicer.reducer;"],"mappings":"wJAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,MAAOC,KAAI,KAAM,oBAAoB,CAGrC,MAAO,IAAMC,YAAW,CAAGF,WAAW,CAAC,CACrCG,IAAI,CAAE,OAAO,CACbC,YAAY,CAAE,CACZC,SAAS,CAAEJ,IAAI,CAACK,MAAM,CACtBC,KAAK,CAAE,EAAE,CACTC,aAAa,CAAC,CAChB,CAAC,CACDC,QAAQ,CAAE,CACRC,SAAS,CAAC,mBAACC,KAAY,CAACC,MAAM,CAAK,CAC/B,GAAGD,KAAK,CAACJ,KAAK,CAACM,KAAK,CAAC,SAACC,IAAgB,QAAKA,KAAI,CAACC,YAAY,GAAKH,MAAM,CAACI,OAAO,CAACD,YAAY,GAAC,CAAC,CAC1FJ,KAAK,CAACJ,KAAK,8BAAOI,KAAK,CAACJ,KAAK,GAAEK,MAAM,CAACI,OAAO,EAAC,CAC9CC,OAAO,CAACC,GAAG,CAACP,KAAK,CAACJ,KAAK,CAAC,CACxBI,KAAK,CAACH,aAAa,EAAII,MAAM,CAACI,OAAO,CAACG,UAAU,CACpD,CAAC,IAAM,CACHC,KAAK,CAAC,iDAAiD,CAAC,CAC5D,CACJ,CAAC,CACDC,cAAc,CAAC,wBAACV,KAAY,CAACC,MAAM,CAAI,CACnC;AACA;AAAA,CAEN,CACF,CAAC,CAAC,CAEK,yBAAoCV,WAAW,CAACoB,OAAO,CAAhDZ,SAAS,sBAATA,SAAS,CAAEW,cAAc,sBAAdA,cAAc,CAAuB,iCAC9D,cAAenB,YAAW,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}