{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erana\\\\Documents\\\\gitHub.io\\\\epicure-project\\\\epicure\\\\src\\\\component\\\\Restaurant\\\\RenderRest\\\\RenderRest.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Card from \"../../Card/Card\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import \"./RenderRest.css\";\n\nconst RenderRest = props => {\n  _s();\n  const restArray = useSelector(state => state.restaurants.value);\n  let filteredRest = [];\n  let open = [];\n  let d = new Date();\n  switch (props.sortFilter) {\n    case \"All\":\n      filteredRest = restArray;\n      break;\n    case \"New\":\n      let year = d.getFullYear();\n      for (let i = 0; i < restArray.length; i++) {\n        if (year - restArray[i].openYear === 0) {\n          filteredRest.push(restArray[i]);\n        }\n      }\n      break;\n    case \"Open Now\":\n      let hour = d.getHours();\n      let day = d.getDay();\n      for (let i = 0; i < restArray.length; i++) {\n        if (restArray[i].openHours[0] < hour && hour < restArray[i].openHours[1] && restArray[i].openDays.includes(day)) {\n          open.push(restArray[i]);\n        }\n      }\n      filteredRest = open;\n      break;\n    case \"Most Popular\":\n      let mostPopular1 = restArray.filter(rest => rest.rating.includes(\"5\"));\n      let mostPopular2 = restArray.filter(rest => rest.rating.includes(\"4\"));\n      filteredRest = [...mostPopular1, ...mostPopular2];\n      break;\n    default:\n      filteredRest = restArray;\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"restaurant\",\n      children: filteredRest.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onCardClick(card.name),\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          onClick: onCardClick,\n          class: card.price ? \"dish\" : \"rest\",\n          img: card.img,\n          name: card.name,\n          icons: card.icons,\n          about: card.about,\n          price: card.price,\n          chef: card.chef,\n          rating: card.rating\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(RenderRest, \"GNYjA39Qo2ufzVsG2jFzx0OalXY=\", false, function () {\n  return [useSelector];\n});\n_c = RenderRest;\nexport default RenderRest;\n\n// case 'Most Popular':\n//     filteredRest === restArray\n//     break;\n// case 'Map View':\n//     filteredRest === restArray\n//     break;\nvar _c;\n$RefreshReg$(_c, \"RenderRest\");","map":{"version":3,"names":["React","Card","useSelector","RenderRest","props","restArray","state","restaurants","value","filteredRest","open","d","Date","sortFilter","year","getFullYear","i","length","openYear","push","hour","getHours","day","getDay","openHours","openDays","includes","mostPopular1","filter","rest","rating","mostPopular2","map","card","index","onCardClick","name","price","img","icons","about","chef"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/epicure/src/component/Restaurant/RenderRest/RenderRest.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { ICard, IRenderRest } from \"../../../interFaces/interFaces\";\r\nimport Card from \"../../Card/Card\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../../../store/store/store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import \"./RenderRest.css\";\r\n\r\nconst RenderRest: any = (props: IRenderRest) => {\r\n  const restArray = useSelector((state: IRootState) => state.restaurants.value);\r\n  let filteredRest: Array<ICard> = [];\r\n  let open: Array<any> = [];\r\n\r\n  let d = new Date();\r\n  switch (props.sortFilter) {\r\n    case \"All\":\r\n      filteredRest = restArray;\r\n      break;\r\n    case \"New\":\r\n      let year = d.getFullYear();\r\n      for (let i = 0; i < restArray.length; i++) {\r\n        if (year - restArray[i].openYear === 0) {\r\n          filteredRest.push(restArray[i]);\r\n        }\r\n      }\r\n      break;\r\n    case \"Open Now\":\r\n      let hour = d.getHours();\r\n      let day = d.getDay();\r\n      for (let i = 0; i < restArray.length; i++) {\r\n        if (\r\n          restArray[i].openHours[0] < hour &&\r\n          hour < restArray[i].openHours[1] &&\r\n          restArray[i].openDays.includes(day)\r\n        ) {\r\n          open.push(restArray[i]);\r\n        }\r\n      }\r\n      filteredRest = open;\r\n      break;\r\n    case \"Most Popular\":\r\n      let mostPopular1 = restArray.filter((rest: any) =>\r\n        rest.rating.includes(\"5\")\r\n      );\r\n      let mostPopular2 = restArray.filter((rest: any) =>\r\n        rest.rating.includes(\"4\")\r\n      );\r\n      filteredRest = [...mostPopular1, ...mostPopular2];\r\n      break;\r\n    default:\r\n      filteredRest = restArray;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"restaurant\">\r\n        {filteredRest.map((card: ICard, index: number) => (\r\n          <div onClick={() => onCardClick(card.name)}>\r\n            <Card\r\n              onClick={onCardClick}\r\n              class={card.price ? \"dish\" : \"rest\"}\r\n              key={index}\r\n              img={card.img}\r\n              name={card.name}\r\n              icons={card.icons}\r\n              about={card.about}\r\n              price={card.price}\r\n              chef={card.chef}\r\n              rating={card.rating}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RenderRest;\r\n\r\n// case 'Most Popular':\r\n//     filteredRest === restArray\r\n//     break;\r\n// case 'Map View':\r\n//     filteredRest === restArray\r\n//     break;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}