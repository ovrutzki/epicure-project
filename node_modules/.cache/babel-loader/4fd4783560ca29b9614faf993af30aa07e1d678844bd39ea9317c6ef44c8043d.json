{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../epicure.json\";\nexport const dishesSlicer = createSlice({\n  name: \"dishes\",\n  initialState: {\n    value: data.dishes,\n    default: data.dishes\n  },\n  reducers: {\n    dishTimeFilter: (state, action) => {\n      switch (action.payload) {\n        case \"Breakfast\":\n          stat = state.default.filter(dish => dish.time.find(time => time === \"breakfast\"));\n          break;\n        case \"Lunch\":\n          specificDishes = AllRestDishes.filter(dish => dish.time.find(time => time === \"lunch\"));\n          break;\n        case \"Dinner\":\n          specificDishes = AllRestDishes.filter(dish => dish.time.find(time => time === \"dinner\"));\n          break;\n        default:\n          specificDishes = AllRestDishes;\n          break;\n      }\n    }\n  }\n});\nexport default dishesSlicer.reducer;","map":{"version":3,"names":["createSlice","data","dishesSlicer","name","initialState","value","dishes","default","reducers","dishTimeFilter","state","action","payload","stat","filter","dish","time","find","specificDishes","AllRestDishes","reducer"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/epicure/src/store/slicer/dishesSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { stat } from \"fs\";\r\nimport data from \"../../epicure.json\";\r\n\r\nexport const dishesSlicer = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    value: data.dishes,\r\n    default : data.dishes\r\n  },\r\n  reducers: {\r\n    dishTimeFilter: (state,action) => {\r\n      switch (action.payload) {\r\n        case \"Breakfast\":\r\n          stat = state.default.filter((dish) =>\r\n            dish.time.find((time) => time === \"breakfast\")\r\n          );\r\n          break;\r\n        case \"Lunch\":\r\n          specificDishes = AllRestDishes.filter((dish) =>\r\n            dish.time.find((time) => time === \"lunch\")\r\n          );\r\n          break;\r\n        case \"Dinner\":\r\n          specificDishes = AllRestDishes.filter((dish) =>\r\n            dish.time.find((time) => time === \"dinner\")\r\n          );\r\n          break;\r\n        default:\r\n          specificDishes = AllRestDishes;\r\n          break;\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default dishesSlicer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,IAAI,MAAM,oBAAoB;AAErC,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;EACtCG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,KAAK,EAAEJ,IAAI,CAACK,MAAM;IAClBC,OAAO,EAAGN,IAAI,CAACK;EACjB,CAAC;EACDE,QAAQ,EAAE;IACRC,cAAc,EAAE,CAACC,KAAK,EAACC,MAAM,KAAK;MAChC,QAAQA,MAAM,CAACC,OAAO;QACpB,KAAK,WAAW;UACdC,IAAI,GAAGH,KAAK,CAACH,OAAO,CAACO,MAAM,CAAEC,IAAI,IAC/BA,IAAI,CAACC,IAAI,CAACC,IAAI,CAAED,IAAI,IAAKA,IAAI,KAAK,WAAW,CAAC,CAC/C;UACD;QACF,KAAK,OAAO;UACVE,cAAc,GAAGC,aAAa,CAACL,MAAM,CAAEC,IAAI,IACzCA,IAAI,CAACC,IAAI,CAACC,IAAI,CAAED,IAAI,IAAKA,IAAI,KAAK,OAAO,CAAC,CAC3C;UACD;QACF,KAAK,QAAQ;UACXE,cAAc,GAAGC,aAAa,CAACL,MAAM,CAAEC,IAAI,IACzCA,IAAI,CAACC,IAAI,CAACC,IAAI,CAAED,IAAI,IAAKA,IAAI,KAAK,QAAQ,CAAC,CAC5C;UACD;QACF;UACEE,cAAc,GAAGC,aAAa;UAC9B;MAAM;IAEZ;EACF;AACF,CAAC,CAAC;AAEF,eAAejB,YAAY,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}