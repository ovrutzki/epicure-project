{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erana\\\\Documents\\\\gitHub.io\\\\epicure-project\\\\epicure\\\\src\\\\component\\\\Restaurant\\\\RenderRest\\\\RenderRest.tsx\";\nimport React from \"react\";\nimport data from \"../../../epicure.json\";\nimport Card from \"../../Card/Card\";\n// import \"./RenderRest.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RenderRest = props => {\n  let filteredRest = [];\n  let d = new Date();\n  switch (props.sortFilter) {\n    case \"All\":\n      filteredRest = data.restaurant;\n      break;\n    case 'New':\n      let month = d.getMonth();\n      for (let i = 0; i < data.restaurant.length; i++) {\n        if (month - data.restaurant[i].openMonth < 4 || month - data.restaurant[i].openMonth < -8) {}\n      }\n      break;\n    case \"Open Now\":\n      let hour = d.getHours();\n      let day = d.getDay();\n      for (let i = 0; i < data.restaurant.length; i++) {\n        if (data.restaurant[i].openHours[0] < hour && hour < data.restaurant[i].openHours[1] && data.restaurant[i].openDays.includes(day)) filteredRest.push(data.restaurant[i]);\n      }\n      return filteredRest;\n      break;\n    default:\n      filteredRest = data.restaurant;\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredRest.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        class: card.price ? \"dish\" : \"rest\",\n        img: card.img,\n        name: card.name,\n        icons: card.icons,\n        about: card.about,\n        price: card.price,\n        chef: card.chef,\n        rating: card.rating\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = RenderRest;\nexport default RenderRest;\n\n// case 'Most Popular':\n//     filteredRest === data.restaurant\n//     break;\n// case 'Map View':\n//     filteredRest === data.restaurant\n//     break;\nvar _c;\n$RefreshReg$(_c, \"RenderRest\");","map":{"version":3,"names":["React","data","Card","RenderRest","props","filteredRest","d","Date","sortFilter","restaurant","month","getMonth","i","length","openMonth","hour","getHours","day","getDay","openHours","openDays","includes","push","map","card","index","price","img","name","icons","about","chef","rating"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/epicure/src/component/Restaurant/RenderRest/RenderRest.tsx"],"sourcesContent":["import React from \"react\";\r\nimport data from \"../../../epicure.json\";\r\nimport { ICard, IRenderRest } from \"../../../interFaces/interFaces\";\r\nimport Card from \"../../Card/Card\";\r\n// import \"./RenderRest.css\";\r\n\r\nconst RenderRest: any = (props: IRenderRest) => {\r\n  let filteredRest: Array<{}> = []\r\n    let d = new Date();\r\n    switch (props.sortFilter) {\r\n      case \"All\":\r\n        filteredRest = data.restaurant;\r\n        break;\r\n      case 'New':\r\n        let month = d.getMonth()\r\n        for (let i = 0; i < data.restaurant.length; i++) {\r\n            if (month - data.restaurant[i].openMonth < 4 || month - data.restaurant[i].openMonth < -8 ){}}\r\n          break;\r\n      case \"Open Now\":\r\n        let hour = d.getHours();\r\n        let day = d.getDay();\r\n        for (let i = 0; i < data.restaurant.length; i++) {\r\n          if (\r\n            data.restaurant[i].openHours[0] < hour &&\r\n            hour < data.restaurant[i].openHours[1] &&\r\n            data.restaurant[i].openDays.includes(day)\r\n          )\r\n            filteredRest.push(data.restaurant[i]);\r\n        } return filteredRest;\r\n        break;\r\n      default:\r\n        filteredRest = data.restaurant;\r\n        break;\r\n    }\r\n  return (\r\n    <>\r\n      <div>\r\n        {filteredRest.map((card: ICard, index: number) => (\r\n          <Card\r\n            class={card.price ? \"dish\" : \"rest\"}\r\n            key={index}\r\n            img={card.img}\r\n            name={card.name}\r\n            icons={card.icons}\r\n            about={card.about}\r\n            price={card.price}\r\n            chef={card.chef}\r\n            rating={card.rating}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RenderRest;\r\n\r\n// case 'Most Popular':\r\n//     filteredRest === data.restaurant\r\n//     break;\r\n// case 'Map View':\r\n//     filteredRest === data.restaurant\r\n//     break;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,uBAAuB;AAExC,OAAOC,IAAI,MAAM,iBAAiB;AAClC;AAAA;AAAA;AAEA,MAAMC,UAAe,GAAIC,KAAkB,IAAK;EAC9C,IAAIC,YAAuB,GAAG,EAAE;EAC9B,IAAIC,CAAC,GAAG,IAAIC,IAAI,EAAE;EAClB,QAAQH,KAAK,CAACI,UAAU;IACtB,KAAK,KAAK;MACRH,YAAY,GAAGJ,IAAI,CAACQ,UAAU;MAC9B;IACF,KAAK,KAAK;MACR,IAAIC,KAAK,GAAGJ,CAAC,CAACK,QAAQ,EAAE;MACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAACQ,UAAU,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QAC7C,IAAIF,KAAK,GAAGT,IAAI,CAACQ,UAAU,CAACG,CAAC,CAAC,CAACE,SAAS,GAAG,CAAC,IAAIJ,KAAK,GAAGT,IAAI,CAACQ,UAAU,CAACG,CAAC,CAAC,CAACE,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;MAAC;MAC/F;IACJ,KAAK,UAAU;MACb,IAAIC,IAAI,GAAGT,CAAC,CAACU,QAAQ,EAAE;MACvB,IAAIC,GAAG,GAAGX,CAAC,CAACY,MAAM,EAAE;MACpB,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAACQ,UAAU,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QAC/C,IACEX,IAAI,CAACQ,UAAU,CAACG,CAAC,CAAC,CAACO,SAAS,CAAC,CAAC,CAAC,GAAGJ,IAAI,IACtCA,IAAI,GAAGd,IAAI,CAACQ,UAAU,CAACG,CAAC,CAAC,CAACO,SAAS,CAAC,CAAC,CAAC,IACtClB,IAAI,CAACQ,UAAU,CAACG,CAAC,CAAC,CAACQ,QAAQ,CAACC,QAAQ,CAACJ,GAAG,CAAC,EAEzCZ,YAAY,CAACiB,IAAI,CAACrB,IAAI,CAACQ,UAAU,CAACG,CAAC,CAAC,CAAC;MACzC;MAAE,OAAOP,YAAY;MACrB;IACF;MACEA,YAAY,GAAGJ,IAAI,CAACQ,UAAU;MAC9B;EAAM;EAEZ,oBACE;IAAA,uBACE;MAAA,UACGJ,YAAY,CAACkB,GAAG,CAAC,CAACC,IAAW,EAAEC,KAAa,kBAC3C,QAAC,IAAI;QACH,KAAK,EAAED,IAAI,CAACE,KAAK,GAAG,MAAM,GAAG,MAAO;QAEpC,GAAG,EAAEF,IAAI,CAACG,GAAI;QACd,IAAI,EAAEH,IAAI,CAACI,IAAK;QAChB,KAAK,EAAEJ,IAAI,CAACK,KAAM;QAClB,KAAK,EAAEL,IAAI,CAACM,KAAM;QAClB,KAAK,EAAEN,IAAI,CAACE,KAAM;QAClB,IAAI,EAAEF,IAAI,CAACO,IAAK;QAChB,MAAM,EAAEP,IAAI,CAACQ;MAAO,GAPfP,KAAK;QAAA;QAAA;QAAA;MAAA,QASb;IAAC;MAAA;MAAA;MAAA;IAAA;EACE,iBACL;AAEP,CAAC;AAAC,KA/CItB,UAAe;AAiDrB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}