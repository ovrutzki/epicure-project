{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../epicure.json\";\nexport const dishesSlicer = createSlice({\n  name: \"dishes\",\n  initialState: {\n    value: data.dishes,\n    allDishes: data.dishes,\n    specificDishes: data.dishes,\n    restaurants: data.restaurant\n  },\n  reducers: {\n    getDishesByRestId: (state, action) => {\n      state.specificDishes = state.allDishes.filter(dish => {\n        var _state$restaurants$fi;\n        return dish.restaurantId === ((_state$restaurants$fi = state.restaurants.find(rest => rest.name === action.payload)) === null || _state$restaurants$fi === void 0 ? void 0 : _state$restaurants$fi.id);\n      });\n    },\n    dishTimeFilter: (state, action) => {\n      switch (action.payload) {\n        case \"Breakfast\":\n          state.value = state.specificDishes.filter(dish => dish.time.find(time => time === \"breakfast\"));\n          console.log(\"1\");\n          break;\n        case \"Lunch\":\n          state.value = state.specificDishes.filter(dish => dish.time.find(time => time === \"lunch\"));\n          console.log(\"12\");\n          break;\n        case \"Dinner\":\n          state.value = state.specificDishes.filter(dish => dish.time.find(time => time === \"dinner\"));\n          console.log(\"3\");\n          break;\n        default:\n          state.value = state.allDishes;\n          break;\n      }\n    }\n  }\n});\nexport const {\n  dishTimeFilter,\n  getDishesByRestId\n} = dishesSlicer.actions;\nexport default dishesSlicer.reducer;","map":{"version":3,"names":["createSlice","data","dishesSlicer","name","initialState","value","dishes","allDishes","specificDishes","restaurants","restaurant","reducers","getDishesByRestId","state","action","filter","dish","restaurantId","find","rest","payload","id","dishTimeFilter","time","console","log","actions","reducer"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/epicure/src/store/slicer/dishesSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { stat } from \"fs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport data from \"../../epicure.json\";\r\nimport { IRootState } from \"../store/store\";\r\nimport { restaurantSlice } from \"./restaurantSlicer\";\r\n\r\nexport const dishesSlicer = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    value: data.dishes,\r\n    allDishes : data.dishes,\r\n    specificDishes: data.dishes,\r\n    restaurants: data.restaurant\r\n  },\r\n  reducers: {\r\n    getDishesByRestId: (state,action) => {\r\n      state.specificDishes = state.allDishes.filter((dish) => dish.restaurantId === state.restaurants.find((rest) => rest.name === action.payload)?.id)\r\n    },\r\n\r\n    dishTimeFilter: (state,action) => {\r\n      switch (action.payload) {\r\n        case \"Breakfast\":\r\n          state.value = state.specificDishes.filter((dish) =>\r\n            dish.time.find((time) => time === \"breakfast\")\r\n            );\r\n            console.log(\"1\")\r\n          break;\r\n        case \"Lunch\":\r\n          state.value = state.specificDishes.filter((dish) =>\r\n            dish.time.find((time) => time === \"lunch\")\r\n          );\r\n          console.log(\"12\")\r\n\r\n          break;\r\n        case \"Dinner\":\r\n          state.value = state.specificDishes.filter((dish) =>\r\n            dish.time.find((time) => time === \"dinner\")\r\n          );\r\n          console.log(\"3\")\r\n\r\n          break;\r\n        default:\r\n          state.value = state.allDishes;\r\n          break;\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const {dishTimeFilter,  getDishesByRestId} = dishesSlicer.actions\r\nexport default dishesSlicer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,OAAOC,IAAI,MAAM,oBAAoB;AAIrC,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;EACtCG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,KAAK,EAAEJ,IAAI,CAACK,MAAM;IAClBC,SAAS,EAAGN,IAAI,CAACK,MAAM;IACvBE,cAAc,EAAEP,IAAI,CAACK,MAAM;IAC3BG,WAAW,EAAER,IAAI,CAACS;EACpB,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiB,EAAE,CAACC,KAAK,EAACC,MAAM,KAAK;MACnCD,KAAK,CAACL,cAAc,GAAGK,KAAK,CAACN,SAAS,CAACQ,MAAM,CAAEC,IAAI;QAAA;QAAA,OAAKA,IAAI,CAACC,YAAY,+BAAKJ,KAAK,CAACJ,WAAW,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAAChB,IAAI,KAAKW,MAAM,CAACM,OAAO,CAAC,0DAA9D,sBAAgEC,EAAE;MAAA,EAAC;IACnJ,CAAC;IAEDC,cAAc,EAAE,CAACT,KAAK,EAACC,MAAM,KAAK;MAChC,QAAQA,MAAM,CAACM,OAAO;QACpB,KAAK,WAAW;UACdP,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACL,cAAc,CAACO,MAAM,CAAEC,IAAI,IAC7CA,IAAI,CAACO,IAAI,CAACL,IAAI,CAAEK,IAAI,IAAKA,IAAI,KAAK,WAAW,CAAC,CAC7C;UACDC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;UAClB;QACF,KAAK,OAAO;UACVZ,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACL,cAAc,CAACO,MAAM,CAAEC,IAAI,IAC7CA,IAAI,CAACO,IAAI,CAACL,IAAI,CAAEK,IAAI,IAAKA,IAAI,KAAK,OAAO,CAAC,CAC3C;UACDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;UAEjB;QACF,KAAK,QAAQ;UACXZ,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACL,cAAc,CAACO,MAAM,CAAEC,IAAI,IAC7CA,IAAI,CAACO,IAAI,CAACL,IAAI,CAAEK,IAAI,IAAKA,IAAI,KAAK,QAAQ,CAAC,CAC5C;UACDC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;UAEhB;QACF;UACEZ,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACN,SAAS;UAC7B;MAAM;IAEZ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAACe,cAAc;EAAGV;AAAiB,CAAC,GAAGV,YAAY,CAACwB,OAAO;AACxE,eAAexB,YAAY,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}