{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erana\\\\Documents\\\\gitHub.io\\\\epicure-project\\\\epicure\\\\src\\\\component\\\\Chefs\\\\SingleChef\\\\SingleChef.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./SingleChef.css\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../../Card/Card\";\nimport Navbar from \"../../Navbar/Navbar\";\nimport Footer from \"../../Footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleChef = props => {\n  _s();\n  const chefArray = useSelector(state => state.chefs.value);\n  const restArray = useSelector(state => state.restaurants.value);\n  let {\n    chefName\n  } = useParams();\n  let chefIndex = chefArray.findIndex(chef => chef.name === chefName);\n  const specificChef = chefArray[chefIndex];\n  const chefRestaurants = [];\n  // const chefRestaurants = restArray.filter((rest) => rest.id === (specificChef.restaurant.map((x) => x)))\n  for (let i = 0; i < restArray.length; i++) {\n    for (let j = 0; j < specificChef.restaurant.length; j++) {\n      if (restArray[i].id === specificChef.restaurant[j]) {\n        chefRestaurants.push(restArray[i]);\n      }\n    }\n  }\n  console.log(chefRestaurants);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chef-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chef-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: specificChef.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: specificChef.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: specificChef.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"\",\n        children: chefRestaurants.map((rest, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            name: rest.name,\n            img: rest.img,\n            class: \"card\",\n            id: rest.id,\n            rating: rest.rating,\n            chef: rest.chef\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(SingleChef, \"fiEkOdQ9aWF7+ywu8jhA8fXlObY=\", false, function () {\n  return [useSelector, useSelector, useParams];\n});\n_c = SingleChef;\nexport default SingleChef;\nvar _c;\n$RefreshReg$(_c, \"SingleChef\");","map":{"version":3,"names":["React","useSelector","useParams","Card","Navbar","Footer","SingleChef","props","chefArray","state","chefs","value","restArray","restaurants","chefName","chefIndex","findIndex","chef","name","specificChef","chefRestaurants","i","length","j","restaurant","id","push","console","log","img","about","map","rest","index","rating"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/epicure/src/component/Chefs/SingleChef/SingleChef.tsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./SingleChef.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IRootState } from \"../../../store/store/store\";\r\nimport Card from \"../../Card/Card\";\r\nimport Navbar from \"../../Navbar/Navbar\";\r\nimport Footer from \"../../Footer/Footer\";\r\nimport { ICard, IChefCard } from \"../../../interFaces/interFaces\";\r\n\r\nconst SingleChef:  React.FC<any> = (props) => {\r\n    const chefArray = useSelector((state: IRootState) => state.chefs.value)\r\n    const restArray = useSelector((state: IRootState) => state.restaurants.value)\r\n    let { chefName } = useParams();\r\n    let chefIndex = chefArray.findIndex((chef: IChefCard) => chef.name === chefName);\r\n    const specificChef = chefArray[chefIndex];\r\n    const chefRestaurants = [];\r\n    // const chefRestaurants = restArray.filter((rest) => rest.id === (specificChef.restaurant.map((x) => x)))\r\n    for (let i = 0; i < restArray.length; i++){\r\n        for(let j=0; j< specificChef.restaurant.length; j++){\r\n            if(restArray[i].id === specificChef.restaurant[j]){\r\n                chefRestaurants.push(restArray[i])\r\n            }\r\n        }\r\n    }\r\n    console.log(chefRestaurants);\r\n    return (<>\r\n    <Navbar />\r\n    <div id=\"chef-container\">\r\n        <div id=\"chef-details\">\r\n            <img src={specificChef.img} alt=\"\" />\r\n            <h1>{specificChef.name}</h1>\r\n            <p>{specificChef.about}</p>\r\n        </div>\r\n        <div id=\"\">\r\n            {chefRestaurants.map((rest:ICard, index:number) => (\r\n                <>\r\n                <Card\r\n                  key={index}\r\n                  name={rest.name}\r\n                  img={rest.img}\r\n                  class=\"card\"\r\n                  id={rest.id}\r\n                  rating={rest.rating}\r\n                  chef={rest.chef}\r\n                  />\r\n                </>\r\n            ))}\r\n        </div>\r\n    </div>\r\n        \r\n    <Footer />\r\n    </>)\r\n\r\n}\r\n\r\nexport default SingleChef"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAAA;AAGzC,MAAMC,UAA0B,GAAIC,KAAK,IAAK;EAAA;EAC1C,MAAMC,SAAS,GAAGP,WAAW,CAAEQ,KAAiB,IAAKA,KAAK,CAACC,KAAK,CAACC,KAAK,CAAC;EACvE,MAAMC,SAAS,GAAGX,WAAW,CAAEQ,KAAiB,IAAKA,KAAK,CAACI,WAAW,CAACF,KAAK,CAAC;EAC7E,IAAI;IAAEG;EAAS,CAAC,GAAGZ,SAAS,EAAE;EAC9B,IAAIa,SAAS,GAAGP,SAAS,CAACQ,SAAS,CAAEC,IAAe,IAAKA,IAAI,CAACC,IAAI,KAAKJ,QAAQ,CAAC;EAChF,MAAMK,YAAY,GAAGX,SAAS,CAACO,SAAS,CAAC;EACzC,MAAMK,eAAe,GAAG,EAAE;EAC1B;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,SAAS,CAACU,MAAM,EAAED,CAAC,EAAE,EAAC;IACtC,KAAI,IAAIE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAEJ,YAAY,CAACK,UAAU,CAACF,MAAM,EAAEC,CAAC,EAAE,EAAC;MAChD,IAAGX,SAAS,CAACS,CAAC,CAAC,CAACI,EAAE,KAAKN,YAAY,CAACK,UAAU,CAACD,CAAC,CAAC,EAAC;QAC9CH,eAAe,CAACM,IAAI,CAACd,SAAS,CAACS,CAAC,CAAC,CAAC;MACtC;IACJ;EACJ;EACAM,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC;EAC5B,oBAAQ;IAAA,wBACR,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,EAAE,EAAC,gBAAgB;MAAA,wBACpB;QAAK,EAAE,EAAC,cAAc;QAAA,wBAClB;UAAK,GAAG,EAAED,YAAY,CAACU,GAAI;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eACrC;UAAA,UAAKV,YAAY,CAACD;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eAC5B;UAAA,UAAIC,YAAY,CAACW;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB,eACN;QAAK,EAAE,EAAC,EAAE;QAAA,UACLV,eAAe,CAACW,GAAG,CAAC,CAACC,IAAU,EAAEC,KAAY,kBAC1C;UAAA,uBACA,QAAC,IAAI;YAEH,IAAI,EAAED,IAAI,CAACd,IAAK;YAChB,GAAG,EAAEc,IAAI,CAACH,GAAI;YACd,KAAK,EAAC,MAAM;YACZ,EAAE,EAAEG,IAAI,CAACP,EAAG;YACZ,MAAM,EAAEO,IAAI,CAACE,MAAO;YACpB,IAAI,EAAEF,IAAI,CAACf;UAAK,GANXgB,KAAK;YAAA;YAAA;YAAA;UAAA;QAOR,iBAEP;MAAC;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eAEN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACP;AAEP,CAAC;AAAA,GA5CK3B,UAA0B;EAAA,QACVL,WAAW,EACXA,WAAW,EACVC,SAAS;AAAA;AAAA,KAH1BI,UAA0B;AA8ChC,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}