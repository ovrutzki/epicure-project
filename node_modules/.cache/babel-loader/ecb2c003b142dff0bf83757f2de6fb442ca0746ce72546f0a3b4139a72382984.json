{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erana\\\\Documents\\\\gitHub.io\\\\epicure-project\\\\epicure\\\\src\\\\component\\\\Restaurant\\\\DishesRender\\\\DishesRender.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./DishesRender.css\";\nimport FilterButtons from \"../../Buttons/FilterButtons/Buttons\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../Card/Card\";\nimport { dishTimeFilter, getDishesByRestId } from \"../../../store/slicer/dishesSlicer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DishesRender = props => {\n  _s();\n  const dishArray = useSelector(state => state.dishes.value);\n  const restArray = useSelector(state => state.restaurants.value);\n  const [filter, setFilter] = useState(\"\");\n  const dispatch = useDispatch();\n  dispatch(dishTimeFilter(filter));\n  useEffect(() => {\n    dispatch(getDishesByRestId(props.restName));\n    dispatch(dishTimeFilter(filter));\n  }, [filter]);\n  const filterEvent = e => {\n    const target = e.target;\n    setFilter(target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-dishes\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filter-dish\",\n        children: [/*#__PURE__*/_jsxDEV(FilterButtons, {\n          name: \"Breakfast\",\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n          name: \"Lunch\",\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n          name: \"Dinner\",\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dish-div\",\n      children: specificDishes.map((dish, index) => /*#__PURE__*/_jsxDEV(Card, {\n        name: dish.name,\n        img: dish.img,\n        about: dish.about,\n        price: dish.price,\n        class: \"card\",\n        navigate: \"\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DishesRender, \"BufpqhYlv2C2RjOzjL5djxp7uyk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = DishesRender;\nexport default DishesRender;\n\n// let AllRestDishes = dishArray.filter(\n//   (dish) =>\n//     dish.restaurantId === restArray.find((rest) => rest.name === props.restName)?.id\n// );\n// let specificDishes: ICard[] = [];\n// switch (filter) {\n//   case \"Breakfast\":\n//     specificDishes = AllRestDishes.filter((dish) =>\n//       dish.time.find((time) => time === \"breakfast\")\n//     );\n//     break;\n//   case \"Lunch\":\n//     specificDishes = AllRestDishes.filter((dish) =>\n//       dish.time.find((time) => time === \"lunch\")\n//     );\n//     break;\n//   case \"Dinner\":\n//     specificDishes = AllRestDishes.filter((dish) =>\n//       dish.time.find((time) => time === \"dinner\")\n//     );\n//     break;\n//   default:\n//     specificDishes = AllRestDishes;\n//     break;\n// }\nvar _c;\n$RefreshReg$(_c, \"DishesRender\");","map":{"version":3,"names":["React","useEffect","FilterButtons","useState","useDispatch","useSelector","Card","dishTimeFilter","getDishesByRestId","DishesRender","props","dishArray","state","dishes","value","restArray","restaurants","filter","setFilter","dispatch","restName","filterEvent","e","target","specificDishes","map","dish","index","name","img","about","price"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/epicure/src/component/Restaurant/DishesRender/DishesRender.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./DishesRender.css\";\r\nimport FilterButtons from \"../../Buttons/FilterButtons/Buttons\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../../../store/store/store\";\r\nimport Card from \"../../Card/Card\";\r\nimport { ICard } from \"../../../interFaces/interFaces\";\r\nimport { dishTimeFilter, getDishesByRestId } from \"../../../store/slicer/dishesSlicer\";\r\n\r\nexport interface IRestName {\r\n  sortFilter?: string;\r\n  restName?: string;\r\n}\r\n\r\nconst DishesRender: React.FC<IRestName> = (props: IRestName) => {\r\n  const dishArray = useSelector((state: IRootState) => state.dishes.value);\r\n  const restArray = useSelector((state: IRootState) => state.restaurants.value);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  dispatch(dishTimeFilter(filter))\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch( getDishesByRestId(props.restName))\r\n    dispatch(dishTimeFilter(filter))\r\n  },[filter]);\r\n  const filterEvent= (e:Event):void => {\r\n    const target = e.target as HTMLInputElement;\r\n    setFilter(target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"main-dishes\">\r\n        <div id=\"filter-dish\">\r\n          <FilterButtons\r\n            name=\"Breakfast\"\r\n            filter={filter}\r\n            setFilter={setFilter}\r\n          />\r\n          <FilterButtons name=\"Lunch\" filter={filter} setFilter={setFilter} />\r\n          <FilterButtons name=\"Dinner\" filter={filter} setFilter={setFilter} />\r\n        </div>\r\n      </div>\r\n      <div className=\"dish-div\">\r\n        {specificDishes.map((dish: ICard, index: number) => (\r\n          <Card\r\n            name={dish.name}\r\n            img={dish.img}\r\n            key={index}\r\n            about={dish.about}\r\n            price={dish.price}\r\n            class=\"card\"\r\n            navigate={\"\"}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DishesRender;\r\n\r\n\r\n// let AllRestDishes = dishArray.filter(\r\n//   (dish) =>\r\n//     dish.restaurantId === restArray.find((rest) => rest.name === props.restName)?.id\r\n// );\r\n// let specificDishes: ICard[] = [];\r\n// switch (filter) {\r\n//   case \"Breakfast\":\r\n//     specificDishes = AllRestDishes.filter((dish) =>\r\n//       dish.time.find((time) => time === \"breakfast\")\r\n//     );\r\n//     break;\r\n//   case \"Lunch\":\r\n//     specificDishes = AllRestDishes.filter((dish) =>\r\n//       dish.time.find((time) => time === \"lunch\")\r\n//     );\r\n//     break;\r\n//   case \"Dinner\":\r\n//     specificDishes = AllRestDishes.filter((dish) =>\r\n//       dish.time.find((time) => time === \"dinner\")\r\n//     );\r\n//     break;\r\n//   default:\r\n//     specificDishes = AllRestDishes;\r\n//     break;\r\n// }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,oBAAoB;AAC3B,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,IAAI,MAAM,iBAAiB;AAElC,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,oCAAoC;AAAC;AAAA;AAOvF,MAAMC,YAAiC,GAAIC,KAAgB,IAAK;EAAA;EAC9D,MAAMC,SAAS,GAAGN,WAAW,CAAEO,KAAiB,IAAKA,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACxE,MAAMC,SAAS,GAAGV,WAAW,CAAEO,KAAiB,IAAKA,KAAK,CAACI,WAAW,CAACF,KAAK,CAAC;EAC7E,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMgB,QAAQ,GAAGf,WAAW,EAAE;EAC9Be,QAAQ,CAACZ,cAAc,CAACU,MAAM,CAAC,CAAC;EAEhChB,SAAS,CAAC,MAAM;IAEdkB,QAAQ,CAAEX,iBAAiB,CAACE,KAAK,CAACU,QAAQ,CAAC,CAAC;IAC5CD,QAAQ,CAACZ,cAAc,CAACU,MAAM,CAAC,CAAC;EAClC,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EACX,MAAMI,WAAW,GAAGC,CAAO,IAAU;IACnC,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAA0B;IAC3CL,SAAS,CAACK,MAAM,CAACT,KAAK,CAAC;EACzB,CAAC;EACD,oBACE;IAAA,wBACE;MAAK,EAAE,EAAC,aAAa;MAAA,uBACnB;QAAK,EAAE,EAAC,aAAa;QAAA,wBACnB,QAAC,aAAa;UACZ,IAAI,EAAC,WAAW;UAChB,MAAM,EAAEG,MAAO;UACf,SAAS,EAAEC;QAAU;UAAA;UAAA;UAAA;QAAA,QACrB,eACF,QAAC,aAAa;UAAC,IAAI,EAAC,OAAO;UAAC,MAAM,EAAED,MAAO;UAAC,SAAS,EAAEC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eACpE,QAAC,aAAa;UAAC,IAAI,EAAC,QAAQ;UAAC,MAAM,EAAED,MAAO;UAAC,SAAS,EAAEC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACjE;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,UAAU;MAAA,UACtBM,cAAc,CAACC,GAAG,CAAC,CAACC,IAAW,EAAEC,KAAa,kBAC7C,QAAC,IAAI;QACH,IAAI,EAAED,IAAI,CAACE,IAAK;QAChB,GAAG,EAAEF,IAAI,CAACG,GAAI;QAEd,KAAK,EAAEH,IAAI,CAACI,KAAM;QAClB,KAAK,EAAEJ,IAAI,CAACK,KAAM;QAClB,KAAK,EAAC,MAAM;QACZ,QAAQ,EAAE;MAAG,GAJRJ,KAAK;QAAA;QAAA;QAAA;MAAA,QAMb;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,gBACL;AAEP,CAAC;AAAC,GA5CIlB,YAAiC;EAAA,QACnBJ,WAAW,EACXA,WAAW,EAEZD,WAAW;AAAA;AAAA,KAJxBK,YAAiC;AA8CvC,eAAeA,YAAY;;AAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}