[{"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\index.tsx":"1","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\App.tsx":"2","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\store\\store.ts":"3","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Chefs\\Chefs.tsx":"4","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\LogIn\\LogIn.tsx":"5","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\SignIn\\SignIn.tsx":"6","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Home\\Home.tsx":"7","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Restaurant\\Restaurant.tsx":"8","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Chefs\\SingleChef\\SingleChef.tsx":"9","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\restaurantSlicer.tsx":"10","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\orderSlicer.tsx":"11","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\epicureSlicer.tsx":"12","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\chefsSlicer.tsx":"13","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\dishesSlicer.tsx":"14","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Restaurant\\SingleRestPage\\SingleRest.tsx":"15","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Navbar\\Navbar.tsx":"16","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Footer\\Footer.tsx":"17","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Filter\\Filter.tsx":"18","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Popular\\popular.tsx":"19","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Home\\Icons\\icons.tsx":"20","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Chefs\\ChefCard\\ChefCard.tsx":"21","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Hero\\Hero.tsx":"22","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Home\\WeekChef\\WeekChef.tsx":"23","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Card\\Card.tsx":"24","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Restaurant\\RenderRest\\RenderRest.tsx":"25","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Home\\AboutUs\\AboutUs.tsx":"26","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Restaurant\\DishesRender\\DishesRender.tsx":"27","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Navbar\\MobileMenu\\MobileMenu.tsx":"28","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\CartapopUp\\CartPopUp.tsx":"29","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\FilterContainer\\FilterContainer.tsx":"30","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\FilterButtons\\Buttons.tsx":"31","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\DishModal\\DishModal.tsx":"32","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\RatingButton\\Ratingbutton.tsx":"33","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\DistanceButton\\DistanceButtons.tsx":"34","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\PriceButtons\\PriceButtons.tsx":"35","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\userSlicre.tsx":"36","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\interFaces\\interFaces.ts":"37","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\UserUtils\\addCartToUserData.ts":"38","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\AdminSystem\\AdminSystem.tsx":"39","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\ChefUtils\\DeletChef.ts":"40","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\AdminSystem\\EditingData\\EditingData.tsx":"41","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\DishUtils\\DeleteDish.ts":"42","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\RestaurantUtils\\DeleteRestaurant.ts":"43","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\ChefUtils\\AddingChef.ts":"44","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\ChefUtils\\EditChef.ts":"45","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\DishUtils\\addingDish.ts":"46","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\RestaurantUtils\\AddingRestaurant.ts":"47","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\DishUtils\\EditDish.ts":"48","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\RestaurantUtils\\EditRestaurant.ts":"49"},{"size":415,"mtime":1678366352617,"results":"50","hashOfConfig":"51"},{"size":1164,"mtime":1679177054864,"results":"52","hashOfConfig":"51"},{"size":2777,"mtime":1679177055331,"results":"53","hashOfConfig":"51"},{"size":360,"mtime":1678366352520,"results":"54","hashOfConfig":"51"},{"size":4579,"mtime":1679177055230,"results":"55","hashOfConfig":"51"},{"size":4573,"mtime":1679177055293,"results":"56","hashOfConfig":"51"},{"size":1067,"mtime":1678634751981,"results":"57","hashOfConfig":"51"},{"size":708,"mtime":1678366352585,"results":"58","hashOfConfig":"51"},{"size":3192,"mtime":1679177055119,"results":"59","hashOfConfig":"51"},{"size":2069,"mtime":1678709299008,"results":"60","hashOfConfig":"51"},{"size":1864,"mtime":1679177055326,"results":"61","hashOfConfig":"51"},{"size":9,"mtime":1678267262196,"results":"62","hashOfConfig":"51"},{"size":532,"mtime":1679177055319,"results":"63","hashOfConfig":"51"},{"size":2054,"mtime":1678720035200,"results":"64","hashOfConfig":"51"},{"size":1645,"mtime":1679177055278,"results":"65","hashOfConfig":"51"},{"size":3881,"mtime":1679177055235,"results":"66","hashOfConfig":"51"},{"size":469,"mtime":1678366352542,"results":"67","hashOfConfig":"51"},{"size":1713,"mtime":1678721380661,"results":"68","hashOfConfig":"51"},{"size":1461,"mtime":1678719096076,"results":"69","hashOfConfig":"51"},{"size":906,"mtime":1678366352555,"results":"70","hashOfConfig":"51"},{"size":920,"mtime":1679177055042,"results":"71","hashOfConfig":"51"},{"size":619,"mtime":1678366352544,"results":"72","hashOfConfig":"51"},{"size":1627,"mtime":1678366352560,"results":"73","hashOfConfig":"51"},{"size":1247,"mtime":1678718908957,"results":"74","hashOfConfig":"51"},{"size":979,"mtime":1678719128282,"results":"75","hashOfConfig":"51"},{"size":1072,"mtime":1678366352544,"results":"76","hashOfConfig":"51"},{"size":2795,"mtime":1679177055253,"results":"77","hashOfConfig":"51"},{"size":643,"mtime":1678366352569,"results":"78","hashOfConfig":"51"},{"size":3646,"mtime":1679177055013,"results":"79","hashOfConfig":"51"},{"size":2654,"mtime":1678366352496,"results":"80","hashOfConfig":"51"},{"size":1073,"mtime":1678366352496,"results":"81","hashOfConfig":"51"},{"size":4069,"mtime":1679177055186,"results":"82","hashOfConfig":"51"},{"size":1598,"mtime":1678366352511,"results":"83","hashOfConfig":"51"},{"size":1305,"mtime":1678366352493,"results":"84","hashOfConfig":"51"},{"size":1729,"mtime":1678366352503,"results":"85","hashOfConfig":"51"},{"size":552,"mtime":1678702895639,"results":"86","hashOfConfig":"51"},{"size":922,"mtime":1678874222815,"results":"87","hashOfConfig":"51"},{"size":1169,"mtime":1679177055444,"results":"88","hashOfConfig":"51"},{"size":14688,"mtime":1679177054926,"results":"89","hashOfConfig":"51"},{"size":448,"mtime":1679177055353,"results":"90","hashOfConfig":"51"},{"size":2493,"mtime":1679177054981,"results":"91","hashOfConfig":"51"},{"size":493,"mtime":1679177055375,"results":"92","hashOfConfig":"51"},{"size":1067,"mtime":1679177055424,"results":"93","hashOfConfig":"51"},{"size":1006,"mtime":1679177055345,"results":"94","hashOfConfig":"51"},{"size":1010,"mtime":1679177055361,"results":"95","hashOfConfig":"51"},{"size":1332,"mtime":1679177055396,"results":"96","hashOfConfig":"51"},{"size":1390,"mtime":1679177055412,"results":"97","hashOfConfig":"51"},{"size":1380,"mtime":1679177055387,"results":"98","hashOfConfig":"51"},{"size":1446,"mtime":1679177055436,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jdroh2",{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"117"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"117"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\index.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\App.tsx",["268"],[],"import React from \"react\";\r\nimport { BrowserRouter, Routes, Route, useParams } from \"react-router-dom\";\r\nimport AdminSystem from \"./component/AdminSystem/AdminSystem\";\r\nimport Chefs from \"./component/Chefs/Chefs\";\r\nimport SingleChef from \"./component/Chefs/SingleChef/SingleChef\";\r\nimport Home from \"./component/Home/Home\";\r\nimport LogIn from \"./component/LogIn/LogIn\";\r\nimport Restaurant from \"./component/Restaurant/Restaurant\";\r\nimport SingleRest from \"./component/Restaurant/SingleRestPage/SingleRest\";\r\nimport SignIn from \"./component/SignIn/SignIn\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/restaurant\" element={<Restaurant />} />\r\n        <Route path=\"restaurant/:restId\" element={<SingleRest />} />\r\n        <Route path=\"/chefs\" element={<Chefs />} />\r\n        <Route path=\"chefs/:chefId\" element={<SingleChef />} />\r\n        <Route path=\"/log-in\" element={<LogIn />} />\r\n        <Route path=\"/sign-in\" element={<SignIn />} />\r\n        <Route path=\"/admin\" element={<AdminSystem />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\store\\store.ts",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Chefs\\Chefs.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\LogIn\\LogIn.tsx",["269","270","271","272","273","274","275"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./LogIn.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport loginUserStore, {\r\n  getUserData,\r\n  getUserToken,\r\n} from \"../../store/slicer/userSlicre\";\r\nimport { IRootState, IUser } from \"../../store/store/store\";\r\nimport axios from \"axios\";\r\n\r\nconst LogIn: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const userSelector = useSelector((state: IRootState) => state.user.userInfo);\r\n  const userTokenState = useSelector((state: IRootState) => state.user.token);\r\n  const navigate = useNavigate();\r\n  const [email, setEmail]: [string, Dispatch<SetStateAction<string>>] =\r\n    useState(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [userInfo, setUserInfo] = useState<IUser>();\r\n  const [userToken, setUserToken] = useState<string>();\r\n  const [isAuth, setIsAuth] = useState<boolean>(false);\r\n  const [greeting, setGreeting] = useState<boolean>(false);\r\n  const [firstName, setFirstName] = useState<string | undefined>(\"\");\r\n\r\n  const [black, setBlack]: [string, Dispatch<SetStateAction<string>>] =\r\n    useState(\"\");\r\n  const emailOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const passwordOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (password != \"\" && email != \"\") {\r\n      setBlack(\"black-style\");\r\n    } else {\r\n      setBlack(\"\");\r\n    }\r\n  }, [email, password]);\r\n\r\n  const loginUser = async (email: string, password: string) => {\r\n    try {\r\n      const userData = await axios.post(\r\n        \"http://localhost:8000/api/users/login\",\r\n        {\r\n          email: email,\r\n          password: password,\r\n        }\r\n      );\r\n      sessionStorage.setItem(\"user-logged-in\",JSON.stringify(userData.data.user));\r\n      sessionStorage.setItem(\"user-token\", JSON.stringify(userData.data.token));\r\n      dispatch(getUserData(userData.data.user));\r\n      dispatch(getUserToken(userData.data.token));\r\n      setFirstName(userData.data.user.first);\r\n      successfullyLogin();\r\n    } catch (error: any) {\r\n      alert(error.message);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n    loginUser(email, password);\r\n  };\r\n\r\n  const navigateFunction = () => {\r\n    navigate(\"/\");\r\n    setGreeting(false);\r\n  };\r\n  const successfullyLogin = () => {\r\n    setGreeting(true);\r\n    setTimeout(navigateFunction, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div id=\"login-container\">\r\n        <div id=\"login-main\">\r\n          {greeting ? (\r\n            <h1>Welcome Back {firstName}</h1>\r\n          ) : (\r\n            <>\r\n              <div id=\"title\">\r\n                <h1>Log in</h1>\r\n                <h2>To continue the order, please sign in</h2>\r\n              </div>\r\n              <form id=\"login-details\" action=\"\">\r\n                <input\r\n                  onChange={emailOnChange}\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email address\"\r\n                />\r\n                <input\r\n                  onChange={passwordOnChange}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n                <button\r\n                  onClick={handleLogin}\r\n                  className=\"login-btn\"\r\n                  id={black}\r\n                  type=\"submit\"\r\n                >\r\n                  LOGIN\r\n                </button>\r\n                <p>Forget password?</p>\r\n              </form>\r\n              <section>\r\n                <hr />\r\n                <p>or</p> <hr />\r\n              </section>\r\n              <button onClick={() => navigate(\"/sign-in\")} id=\"sign-in-btn\">\r\n                SIGN UP\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n",[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\SignIn\\SignIn.tsx",["276","277","278","279","280","281","282","283","284"],[],"import axios from \"axios\";\r\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./SignIn.css\";\r\n\r\nconst SignIn: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [greeting, setGreeting] = useState<boolean>(false);\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [firstName, setFirstName] = useState<string>(\"\");\r\n  const [lastName, setLastName] = useState<string>(\"\");\r\n  const [address, setAddress] = useState<string>(\"\");\r\n  const [phone, setPhone] = useState<string>();\r\n  const [password, setPassword]: any = useState(\"\");\r\n  const [black, setBlack] = useState<string>(\"\");\r\n\r\n  const emailOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const passwordOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (\r\n      password != \"\" &&\r\n      email != \"\" &&\r\n      firstName != \"\" &&\r\n      lastName != \"\" &&\r\n      address != \"\" &&\r\n      phone != \"\"\r\n    ) {\r\n      setBlack(\"black-style\");\r\n    } else {\r\n      setBlack(\"\");\r\n    }\r\n  }, [email, password, firstName, lastName, address, phone]);\r\n  const registerUser = async (\r\n    first: string,\r\n    last: string,\r\n    address: string,\r\n    phone: string | undefined,\r\n    email: string,\r\n    password: string\r\n  ) => {\r\n    try {\r\n      const userRegisterData = await axios.post(\r\n        \"http://localhost:8000/api/users/register\",\r\n        {\r\n          first: first,\r\n          last: last,\r\n          address: address,\r\n          phone: phone,\r\n          email: email,\r\n          password: password,\r\n          role:\"user\"\r\n        }\r\n      );\r\n      successfullyRegister()\r\n    } catch (err: any) {\r\n      if (err.response.status === 400) {\r\n        console.log(err.response.data);\r\n        alert(err.response.data);\r\n      } else if (err.response.status === 409){\r\n        console.log(err.response.data);\r\n        alert(err.response.data);\r\n        navigate(\"/log-in\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRegister = (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n    registerUser(firstName, lastName, address, phone, email, password);\r\n  };\r\n\r\n  const navigateFunction = () => {\r\n    navigate(\"/log-in\");\r\n    setGreeting(false);\r\n  };\r\n  const successfullyRegister = () => {\r\n    setGreeting(true);\r\n    setTimeout(navigateFunction, 3000);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      \r\n      <div id=\"sign-container\">\r\n        <div id=\"sign-main\">\r\n        {greeting ? <h1>hello {firstName}, Please log-in now</h1> : \r\n        <>\r\n        <div id=\"sign-title\">\r\n          <h1>Sign Up</h1>\r\n          <h2>Please enter your details</h2>\r\n        </div>\r\n        <form id=\"sign-details\" action=\"\">\r\n          <label htmlFor=\"\">First Name</label>\r\n          <input\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            type=\"text\"\r\n            name=\"first-name\"\r\n            placeholder=\"Enter Your First Name\"\r\n          />\r\n          <label htmlFor=\"\">Last Name</label>\r\n          <input\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            type=\"text\"\r\n            name=\"last-name\"\r\n            placeholder=\"Enter Your Last Name\"\r\n          />\r\n          <label htmlFor=\"\">Address</label>\r\n          <input\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            type=\"text\"\r\n            name=\"Address\"\r\n            placeholder=\"Enter Your Address\"\r\n          />\r\n          <label htmlFor=\"\">Phone</label>\r\n          <input\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter Your Phone Number\"\r\n          />\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            onChange={emailOnChange}\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"Email address\"\r\n          />\r\n          <label htmlFor=\"\">Password</label>\r\n          <input\r\n            onChange={passwordOnChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </form>\r\n        <button onClick={handleRegister} id={black} className=\"sign-in-btn\">\r\n          SIGN UP\r\n        </button>\r\n        <section></section>\r\n        </>\r\n        }\r\n        \r\n      </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Home\\Home.tsx",["285"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Restaurant\\Restaurant.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Chefs\\SingleChef\\SingleChef.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\restaurantSlicer.tsx",["286"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\orderSlicer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\epicureSlicer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\chefsSlicer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\dishesSlicer.tsx",["287","288","289"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Restaurant\\SingleRestPage\\SingleRest.tsx",["290","291","292"],[],"import React from \"react\";\r\nimport \"./SingleRest.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { IRestaurants, IRootState } from \"../../../store/store/store\";\r\nimport Card from \"../../Card/Card\";\r\nimport DishesRender from \"../DishesRender/DishesRender\";\r\nimport Navbar from \"../../Navbar/Navbar\";\r\nimport Footer from \"../../Footer/Footer\";\r\nimport axios from \"axios\";\r\n\r\nconst SingleRest: React.FC<any> = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  let { restId } = useParams();\r\n  const restArray = useSelector((state: IRootState) => state.restaurants.value);\r\n  let restIndex = restArray.findIndex((e:IRestaurants) => e.id === Number(restId));\r\n  let d = new Date();\r\n  const specificRest = restArray[restIndex];\r\n\r\n  \r\n  const afterDelete = () => {\r\n    navigate(\"/\");\r\n    // setGreeting(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div id=\"main\">\r\n        <Card\r\n          class=\"single-rest\"\r\n          img={specificRest.img}\r\n          name={specificRest.name}\r\n          chef={specificRest.chef}\r\n          id={specificRest.id}\r\n          navigatePath={\"\"}\r\n        />\r\n        {specificRest.openDays.findIndex((e) => e === d.getDay()) !== -1 &&\r\n        specificRest.openHours[0] < d.getHours() &&\r\n        specificRest.openHours[1] > d.getHours() ? (\r\n          <div className=\"open-now-div\">\r\n            <img className=\"open-now\" src=\"/image/icons/open now.svg\" />\r\n          </div>\r\n        ) : null}\r\n        <DishesRender restId={Number(restId)}/>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleRest;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Navbar\\Navbar.tsx",["293","294"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../GeneralStyle.css\";\r\nimport \"./navStyle.css\";\r\nimport \"../../fonts/helvetica/HelveticaNeue.ttf\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CartPopUp from \"../CartapopUp/CartPopUp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../../store/store/store\";\r\nimport {IoMdMenu} from \"react-icons/io\"\r\nimport {AiOutlineClose} from 'react-icons/ai'\r\nimport MobileMenu from \"./MobileMenu/MobileMenu\";\r\nconst Navbar: React.FC = () => {\r\n  const navigate: any = useNavigate();\r\n  const [openCartModal, setOpenCartModal] = useState<boolean>(false);\r\n  const [openMenu, setOpenMenu] = useState<boolean>(false)\r\n  const amountInCart = useSelector(\r\n    (state: IRootState) => state.order.value.length\r\n    );\r\n    const userSelector = useSelector((state: IRootState) => state.user.userInfo);\r\n    const [userName, setUserName] = useState<string | undefined>(\"Guest\")\r\n  // close the cart pop up\r\n  let cartRef = useRef<HTMLElement>();\r\n  let cartButtonRef: any = useRef();\r\n  useEffect(() => {\r\n    let handler = (event: any) => {\r\n      if (\r\n        !cartRef?.current?.contains(event.target) &&\r\n        !cartButtonRef?.current?.contains(event.target)\r\n      ) {\r\n        setOpenCartModal(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handler);\r\n    };\r\n  });\r\n\r\n  //mobile nav bar\r\n  const hamburgerIcon = <IoMdMenu onClick={() => setOpenMenu(!openMenu)} className=\"hamburger\" size='40px' />\r\n  const closeIcon = <AiOutlineClose onClick={() => setOpenMenu(!openMenu)} className=\"hamburger\" size='30px' />\r\n\r\n  useEffect(() =>{\r\n    setUserName(userSelector?.first);\r\n  },[userName])\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        {openMenu ? closeIcon : hamburgerIcon }\r\n        {openMenu && <MobileMenu />}\r\n        <button className=\"symbol\" onClick={() => navigate(\"/\")}>\r\n            <img src=\"/image/logo.svg\" alt=\"\" />\r\n          </button>\r\n        <div id=\"left-nav\">\r\n          <button onClick={() => navigate(\"/\")}>\r\n            <img src=\"/image/logo.svg\" alt=\"\" />\r\n            EPICURE\r\n          </button>\r\n          <NavLink\r\n            to=\"/restaurant\"\r\n            className={({ isActive }) =>\r\n              isActive ? \"underline\" : \"not-active\"\r\n            }\r\n          >\r\n            Restaurant\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/chefs\"\r\n            className={({ isActive }) =>\r\n              isActive ? \"underline\" : \"not-active\"\r\n            }\r\n          >\r\n            Chefs\r\n          </NavLink>\r\n        </div>\r\n        <div id=\"right-nav\">\r\n          <div>Hello {userName ? userName : \"Guest\"}</div>\r\n          <div id=\"search\">\r\n            <input type=\"text\" placeholder=\"Search for restaurant, Chefs\" />\r\n          </div>\r\n          <button onClick={() => navigate(\"/log-in\")}>\r\n            <img src=\"/image/person.svg\" alt=\"\" />\r\n          </button>\r\n          <button\r\n            ref={cartButtonRef}\r\n            id=\"shopping-icon\"\r\n            onClick={() => setOpenCartModal(!openCartModal)}\r\n          >\r\n            <img src=\"/image/shopping.svg\" alt=\"\" />\r\n            {amountInCart > 0 && <div id=\"amount-in-cart\">{amountInCart}</div>}\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      {openCartModal && <CartPopUp refprops={cartRef} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Footer\\Footer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Filter\\Filter.tsx",["295","296","297","298","299","300","301","302"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Popular\\popular.tsx",["303"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Home\\Icons\\icons.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Chefs\\ChefCard\\ChefCard.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Hero\\Hero.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Home\\WeekChef\\WeekChef.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Card\\Card.tsx",["304","305","306"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Restaurant\\RenderRest\\RenderRest.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Home\\AboutUs\\AboutUs.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Restaurant\\DishesRender\\DishesRender.tsx",["307","308","309","310","311"],[],"import React, { Dispatch, SetStateAction, useEffect, useRef } from \"react\";\r\nimport \"./DishesRender.css\";\r\nimport FilterButtons from \"../../Buttons/FilterButtons/Buttons\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../../../store/store/store\";\r\nimport Card from \"../../Card/Card\";\r\nimport { ICard } from \"../../../interFaces/interFaces\";\r\nimport {\r\n  dishTimeFilter,\r\n  getDishesByRestId,\r\n} from \"../../../store/slicer/dishesSlicer\";\r\nimport DishModal from \"../../DishModal/DishModal\";\r\n\r\nexport interface IRestId {\r\n  restId?: number;\r\n}\r\n\r\nconst DishesRender: React.FC<IRestId> = (props: IRestId) => {\r\n  const specificDishes = useSelector(\r\n    (state: IRootState) => state.dishes.specificDishes\r\n  );\r\n  const filteredDishes = useSelector(\r\n    (state: IRootState) => state.dishes.value\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [dishId, setDishId]= useState<number>()\r\n  \r\n  let dishModalRef:any = useRef()\r\n    useEffect(()=>{\r\n        let handler = (event:any) =>{\r\n            if(!dishModalRef?.current?.contains(event.target)){\r\n              setIsOpen(false)\r\n            }\r\n        }\r\n        document.addEventListener(\"mousedown\",handler);\r\n\r\n        return () => {\r\n          document.removeEventListener(\"mousedown\",handler);\r\n        }\r\n    })\r\n\r\n  useEffect(() => {\r\n    dispatch(getDishesByRestId(props.restId));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(dishTimeFilter(filter));\r\n  }, [filter]);\r\n\r\n  const filterEvent = (e: Event): void => {\r\n    const target = e.target as HTMLInputElement;\r\n    setFilter(target.value);\r\n  };\r\n  const openModal = (id:any):void => {\r\n    setIsOpen(!isOpen)\r\n    setDishId(id)\r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"main-dishes\">\r\n        <div id=\"filter-dish\">\r\n          <FilterButtons name=\"Breakfast\" onClick={filterEvent} />\r\n          <FilterButtons name=\"Lunch\" onClick={filterEvent} />\r\n          <FilterButtons name=\"Dinner\" onClick={filterEvent} />\r\n        </div>\r\n      </div>\r\n      <div className=\"dish-div\" >\r\n        {filteredDishes?.map((dish: ICard, index: number) => (\r\n          <Card\r\n            class = \"card dish-render dish\"\r\n            key={index*100}\r\n            name={dish.name}\r\n            img={dish.img}\r\n            icons={dish.icons}\r\n            about={dish.about}\r\n            price={dish.price}\r\n            onClick = {() => openModal(dish.id)}\r\n            id={dish.id}\r\n            />\r\n          \r\n          ))}\r\n      </div>\r\n          {isOpen && <DishModal  refProps={dishModalRef} onClose={openModal} open={isOpen} id={dishId} restaurantId={props.restId}/>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DishesRender;\r\n\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Navbar\\MobileMenu\\MobileMenu.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\CartapopUp\\CartPopUp.tsx",["312","313","314","315","316","317","318"],[],"import React, { HtmlHTMLAttributes, useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RefactorActionInfo } from 'typescript'\r\nimport { deleteFromCart } from '../../store/slicer/orderSlicer'\r\nimport { IOrderState, IRootState } from '../../store/store/store'\r\nimport \"./CartPopUp.css\"\r\n\r\nexport interface ICartModal{\r\n    refprops:any\r\n}\r\n\r\nconst CartPopUp: React.FC<ICartModal> = (props:ICartModal)=> {\r\n    const dispatch = useDispatch()\r\n    const dishesInCart = useSelector((state: IRootState) => state.order.value);\r\n    const checkoutPrice = useSelector((state: IRootState) => state.order.checkoutPrice);\r\n    const [checkOut, setCheckOut] = useState(0)\r\n    useEffect(() => {\r\n        setCheckOut( checkOut + checkoutPrice)\r\n         },[])\r\n\r\n  return (\r\n    <div ref={props.refprops} id='cart-container'>\r\n        <h1>YOUR ORDER</h1>\r\n{ dishesInCart[0] ?  <><h2>{dishesInCart[0].restaurantName}</h2>\r\n        <div id='dish-in-cart'>\r\n        {dishesInCart.map((dish:IOrderState,index:number)=> {\r\n         return   <div key={index} id='single-dish'>\r\n                <img src={dish.img} alt={dish.name} />\r\n                <div id='mid-div'>\r\n                    <div id='mid-up'>\r\n                        <div id='amount'>{dish.quantity}</div>\r\n                        <div id='dish-name'>\r\n                            <h3>{dish.name}</h3>\r\n                            <p>₪{dish.totalPrice}.00</p>\r\n                        </div>\r\n                    </div>\r\n                    <div id='mid-down'>\r\n                        {dish.info && dish.info.map((info:string) => info !== \"\" && (<><p>{info}</p><hr /></>) \r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div id='right-div'><button onClick={() =>dispatch(deleteFromCart(dish.dishId))} id='delete'>X</button><p>₪{dish.price}</p></div>\r\n            </div>\r\n        })}\r\n        </div>\r\n        <hr id='mid-hr'/>\r\n        <div id='cart-input'>\r\n            <h3>Add A Comment</h3>\r\n            <textarea placeholder='Special requests, allergies, deary restrictions, etc.'></textarea>\r\n\r\n        </div></> : <img src='/image/icons/empty bag.svg' />}\r\n        <div id='btn-div'>\r\n            <button id='checkout-btn'>CHECKOUT ₪{checkOut}</button>\r\n            <button id='history-btn'>ORDER HISTORY</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartPopUp\r\n\r\n\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\FilterContainer\\FilterContainer.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\FilterButtons\\Buttons.tsx",["319"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\DishModal\\DishModal.tsx",["320","321"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport \"./DishModal.css\";\r\nimport Card from \"../Card/Card\";\r\nimport { IModal } from \"../../interFaces/interFaces\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {  IOrderState, IRootState } from \"../../store/store/store\";\r\nimport { addToCart } from \"../../store/slicer/orderSlicer\";\r\nimport axios from \"axios\";\r\n\r\nconst DishModal: React.FC<IModal> = (props: IModal) => {\r\n  const clickedDish = useSelector((state: IRootState) =>\r\n    state.dishes.value.find((dish) => dish.id === props.id)\r\n  );\r\n  const dispatch = useDispatch();\r\n  // adding the user changes\r\n  const [changes, setChanges] = useState<string[]>([]);\r\n  const handleChanges = (event: any) => {\r\n    const option = event.target.value;\r\n    const isChecked = event.target.checked;\r\n    if (isChecked) {\r\n      setChanges([...changes, option]);\r\n    } else {\r\n      setChanges(changes.filter((changes) => changes !== option));\r\n    }\r\n  };\r\n  // adding the user side choice\r\n  const [sideChoice, setSideChoice]: [\r\n    string,\r\n    Dispatch<SetStateAction<string>>\r\n  ] = useState<string>(\"\");\r\n  const handelSides = (event: any) => {\r\n    const option = event.target.value;\r\n    setSideChoice(option);\r\n  };\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  // const [userDishForCart, setUserDishForCart] = useState()\r\n\r\n  const userDishForCart: IOrderState = {\r\n    dbId: clickedDish?._id,\r\n    dishId: clickedDish?.id,\r\n    restaurantId: clickedDish?.restaurantId,\r\n    price: clickedDish?.price,\r\n    totalPrice: clickedDish && clickedDish.price * quantity,\r\n    quantity: quantity,\r\n    info: [...changes, sideChoice],\r\n    img: clickedDish?.img,\r\n    name: clickedDish?.name,\r\n    restaurantName: props.restaurantName,\r\n  };\r\n  const btnFunction = () => {\r\n    dispatch(addToCart(userDishForCart));\r\n    props.onClose();\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div id=\"modal-content\">\r\n        <div ref={props.refProps} id=\"modal\">\r\n          <button id=\"close\" onClick={props.onClose}>\r\n            X\r\n          </button>\r\n          <Card\r\n            img={clickedDish?.img}\r\n            name={clickedDish?.name}\r\n            about={clickedDish?.about}\r\n            icons={clickedDish?.icons}\r\n            price={clickedDish?.price}\r\n          />\r\n          <div id=\"modal-bottom\">\r\n            <form>\r\n              <h1>Choose a side</h1>\r\n              {clickedDish?.sides.map((side, index: number) => (\r\n                <label className=\"check-label\" key={index} htmlFor=\"\">\r\n                  <input\r\n                    onChange={handelSides}\r\n                    name=\"sides\"\r\n                    value={side}\r\n                    type=\"radio\"\r\n                    className=\"radio\"\r\n                  />\r\n                  {side}\r\n                </label>\r\n              ))}\r\n            </form>\r\n            <form>\r\n              <h1>Changes</h1>\r\n              {clickedDish?.changes.map((change, index: number) => (\r\n                <label key={index} htmlFor=\"\">\r\n                  <input\r\n                    onChange={handleChanges}\r\n                    value={change}\r\n                    type=\"checkbox\"\r\n                    className=\"check\"\r\n                  />\r\n                  {change}\r\n                </label>\r\n              ))}\r\n            </form>\r\n            <div id=\"quantity\">\r\n              <h1>Quantity</h1>\r\n              <div >\r\n                <button onClick={() => setQuantity((quantity) => quantity - 1)}>\r\n                  <img src=\"/image/icons/minus.svg\" alt=\"minus\" />\r\n                </button>\r\n                <p>{quantity}</p>\r\n                <button onClick={() => setQuantity((quantity) => quantity + 1)}>\r\n                  <img src=\"/image/icons/plus.svg\" alt=\"plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button onClick={btnFunction} id=\"cart-btn\">\r\n              ADD TO CART\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DishModal;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\RatingButton\\Ratingbutton.tsx",["322","323"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\DistanceButton\\DistanceButtons.tsx",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\Buttons\\PriceButtons\\PriceButtons.tsx",["324"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\store\\slicer\\userSlicre.tsx",["325"],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\interFaces\\interFaces.ts",[],[],"C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\UserUtils\\addCartToUserData.ts",["326"],[],"import axios from \"axios\";\r\nimport { IOrderState } from \"../../store/store/store\";\r\n\r\nexport const addCartToUserData = async (dishToCart:IOrderState) => {\r\n   const id = dishToCart.dishId\r\n   const restaurantId= dishToCart?.restaurantId;\r\n   const price= dishToCart?.price;\r\n   const totalPrice =dishToCart.totalPrice\r\n   const quantity= dishToCart.quantity;\r\n   const info= dishToCart.info\r\n  const restaurantName = dishToCart.restaurantName\r\n  const img = dishToCart.img\r\n  const name = dishToCart.name\r\n    try {\r\n      const addingDish = await axios.post(\r\n        \"http://localhost:8000/api/users/addDish\",\r\n        {\r\n            dishId: id,\r\n            restaurantId: restaurantId,\r\n            price: price,\r\n            totalPrice: totalPrice,\r\n            quantity: quantity,\r\n            info: info,\r\n            img: img,\r\n            name: name,\r\n            restaurantName: restaurantName\r\n        },{\r\n          headers: {\r\n            Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n          },\r\n        }\r\n      );\r\n      \r\n    } catch (err: any) {\r\n      console.log(err.response.data);\r\n      alert(err.response.data);\r\n    }\r\n  };","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\AdminSystem\\AdminSystem.tsx",["327","328","329","330","331","332"],[],"import React, { ReactNode, useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IChefCard } from \"../../interFaces/interFaces\";\r\nimport {\r\n  IChefs,\r\n  IDishes,\r\n  IDishState,\r\n  IRestaurants,\r\n  IRootState,\r\n} from \"../../store/store/store\";\r\nimport { deleteChef } from \"../../utils//ChefUtils/DeletChef\";\r\nimport { deleteDish } from \"../../utils//DishUtils/DeleteDish\";\r\nimport {\r\n  deleteRestaurant,\r\n  deleteRestaurantDishes,\r\n} from \"../../utils/RestaurantUtils/DeleteRestaurant\";\r\nimport FilterButtons from \"../Buttons/FilterButtons/Buttons\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\nimport \"./AdminSystem.css\";\r\nimport EditingData from \"./EditingData/EditingData\";\r\n\r\nconst AdminSystem: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [openEditor, setOpenEditor] = useState<number>();\r\n  const [openAdding, setOpenAdding] = useState<boolean>(false);\r\n  const dishesArray = useSelector(\r\n    (state: IRootState) => state.dishes.allDishes\r\n  );\r\n  const chefsArray = useSelector((state: IRootState) => state.chefs.value);\r\n  const restaurantsArray = useSelector(\r\n    (state: IRootState) => state.restaurants.default\r\n  );\r\n  let detailsModalRef: any = useRef();\r\n  useEffect(() => {\r\n    let handler = (event: any) => {\r\n      if (!detailsModalRef?.current?.contains(event.target)) {\r\n        setOpenAdding(false);\r\n        setOpenEditor(-2);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handler);\r\n    };\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setOpenAdding(false);\r\n    setOpenEditor(-2);\r\n  };\r\n  const [collection, setCollection] = useState<string>(\"\");\r\n\r\n  const handelDeleteRestaurant = (\r\n    rest_id: any,\r\n    restId: number,\r\n    restName: string\r\n  ) => {\r\n    let userInput = prompt(\r\n      \"deleting this restaurant will delete all its dishes. to approve enter the restaurant name:\"\r\n    );\r\n    if (restName.toLocaleLowerCase() === userInput?.toLocaleLowerCase()) {\r\n      deleteRestaurantDishes(restId);\r\n      deleteRestaurant(rest_id);\r\n    } else {\r\n      alert(\"try again\");\r\n    }\r\n  };\r\n  const handelDeleteChef = (chefId: number, chefName: string) => {\r\n    let userInput = prompt(\r\n      \"Are you sure you want to delete this Chef?. to approve enter the chef name:\"\r\n    );\r\n    if (chefName.toLocaleLowerCase() === userInput?.toLocaleLowerCase()) {\r\n      deleteChef(chefId);\r\n    } else {\r\n      alert(\"try again\");\r\n    }\r\n  };\r\n  const handelDeleteDish = (dishId: number, dishName: string) => {\r\n    let userInput = prompt(\r\n      \"Are you sure you want to delete this Chef?. to approve enter the chef name:\"\r\n    );\r\n    if (dishName.toLocaleLowerCase() === userInput?.toLocaleLowerCase()) {\r\n      deleteDish(dishId);\r\n    } else {\r\n      alert(\"try again\");\r\n    }\r\n  };\r\n  const userLogged = sessionStorage.getItem(\"user-logged-in\")\r\n\r\nconsole.log(userLogged);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n        {userLogged?.includes('admin' || \"chef\")? \r\n      <div id=\"admin-container\">\r\n        <div id=\"filter-div\">\r\n          <FilterButtons name=\"Chefs\" onClick={() => setCollection(\"Chefs\")} />\r\n          <FilterButtons\r\n            name=\"Restaurants\"\r\n            onClick={() => setCollection(\"Restaurants\")}\r\n          />\r\n          <FilterButtons\r\n            name=\"Dishes\"\r\n            onClick={() => setCollection(\"Dishes\")}\r\n          />\r\n        </div>\r\n        {collection === \"Chefs\" && (\r\n          <div id=\"chefs-data\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>NAME</th>\r\n                  <th>RESTAURANTS</th>\r\n                  <th>AGE</th>\r\n                  <th>IMAGE</th>\r\n                  <th>ABOUT</th>\r\n                  <th>DELETE</th>\r\n                  <th>UPDATE</th>\r\n                </tr>\r\n                {chefsArray.map((chef: IChefs, index: number) => {\r\n                  return (\r\n                    <tr key={index * 700}>\r\n                      <td>{chef.id}</td>\r\n                      <td>{chef.name}</td>\r\n                      <td>{chef.restaurant.join(',')}</td>\r\n                      <td>{chef.age}</td>\r\n                      <td>\r\n                        <a href={chef.img}>{chef.img}</a>\r\n                      </td>\r\n                      <td>{chef.about}</td>\r\n                      <td>\r\n                        <img\r\n                          className=\"delete-btn\"\r\n                          src=\"/image/icons/delete.svg\"\r\n                          alt=\"delete\"\r\n                          onClick={() => handelDeleteChef(chef._id, chef.name)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          className=\"edit-btn\"\r\n                          src=\"/image/icons/edit.svg\"\r\n                          alt=\"edit\"\r\n                          onClick={() => setOpenEditor(chef.id)}\r\n                        />\r\n                      </td>\r\n                      {openEditor === chef.id && (\r\n                        <EditingData\r\n                          onclose={closeModal}\r\n                          refProps={detailsModalRef}\r\n                          id={chef.id}\r\n                          _id={chef._id}\r\n                          name={chef.name}\r\n                          restaurant={String(chef.restaurant)}\r\n                          age={chef.age}\r\n                          img={chef.img}\r\n                          about={chef.about}\r\n                        />\r\n                      )}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <button onClick={() => setOpenAdding(true)}>\r\n              <img src=\"/image/icons/add-new.png\" alt=\"add new\" />\r\n            </button>\r\n            {openAdding && (\r\n              <EditingData\r\n              onclose={closeModal}\r\n                refProps={detailsModalRef}\r\n                id={chefsArray.length + 1}\r\n                name={\"\"}\r\n                restaurant={\"\"}\r\n                age={0}\r\n                img={\"\"}\r\n                about={\"\"}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        {collection === \"Restaurants\" && (\r\n          <div id=\"restaurants-data\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>NAME</th>\r\n                  <th>ADDRESS</th>\r\n                  <th>CHEF</th>\r\n                  <th>CHEF ID</th>\r\n                  <th>OPENING</th>\r\n                  <th>CLOSING</th>\r\n                  <th>DAYS</th>\r\n                  <th>IMAGE</th>\r\n                  <th>DISHES</th>\r\n                  <th>RATING</th>\r\n                  <th>DELETE</th>\r\n                  <th>UPDATE</th>\r\n                </tr>\r\n                {restaurantsArray.map((rest: IRestaurants, index: number) => {\r\n                  return (\r\n                    <tr key={index * 802}>\r\n                      <td>{rest.id}</td>\r\n                      <td>{rest.name}</td>\r\n                      <td>{rest.address}</td>\r\n                      <td>{rest.chef}</td>\r\n                      <td>{rest.chefId}</td>\r\n                      <td>{rest.openHours[0]}</td>\r\n                      <td>{rest.openHours[1]}</td>\r\n                      <td>{rest.openDays.join(\",\")}</td>\r\n                      <td>\r\n                        <a href={rest.img}>{rest.img}</a>\r\n                      </td>\r\n                      <td>\r\n                        {dishesArray\r\n                          .filter((dish) => dish.restaurantId === rest.id)\r\n                          .map((dish) => `${dish.id},`)}\r\n                      </td>\r\n                      <td>{\"★\".repeat(Number(rest.rating.split(\"\")[14]))}</td>\r\n                      <td>\r\n                        <img\r\n                          className=\"delete-btn\"\r\n                          src=\"/image/icons/delete.svg\"\r\n                          alt=\"delete\"\r\n                          onClick={() =>\r\n                            handelDeleteRestaurant(rest._id, rest.id, rest.name)\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          className=\"\"\r\n                          src=\"/image/icons/edit.svg\"\r\n                          alt=\"edit\"\r\n                          onClick={() => setOpenEditor(rest.id)}\r\n                        />\r\n                      </td>\r\n                      {openEditor === rest.id && (\r\n                        <EditingData\r\n                        onclose={closeModal}\r\n                          refProps={detailsModalRef}\r\n                          id={rest.id}\r\n                          _id={rest._id}\r\n                          name={rest.name}\r\n                          address={String(rest.address)}\r\n                          chef={rest.chef}\r\n                          chefId={rest.chefId}\r\n                          openHours={String(rest.openHours)}\r\n                          openDays={String(rest.openDays)}\r\n                          img={rest.img}\r\n                          dishes={dishesArray\r\n                            .filter((dish) => dish.restaurantId === rest.id)\r\n                            .map((dish) => `${dish.id},`)\r\n                            .join(\",\")}\r\n                          rating={rest.rating.split(\"\")[14]}\r\n                        />\r\n                      )}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <button onClick={() => setOpenAdding(true)}>\r\n              <img src=\"/image/icons/add-new.png\" alt=\"add new\" />\r\n            </button>\r\n            {openAdding && (\r\n              <EditingData\r\n              onclose={closeModal}\r\n                refProps={detailsModalRef}\r\n                id={restaurantsArray.length + 1}\r\n                name={\"\"}\r\n                address={\"\"}\r\n                chef={\"\"}\r\n                chefId={0}\r\n                openHours={\"\"}\r\n                openYear={0}\r\n                img={\"\"}\r\n                dishes={\"\"}\r\n                rating={\"\"}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        {collection === \"Dishes\" && (\r\n          <div id=\"dishes-data\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>NAME</th>\r\n                  <th>REST ID</th>\r\n                  <th>RATING</th>\r\n                  <th>TIME</th>\r\n                  <th>ABOUT</th>\r\n                  <th>PRICE</th>\r\n                  <th>ALLERGEN</th>\r\n                  <th>ICONS</th>\r\n                  <th>SIDES</th>\r\n                  <th>CHANGES</th>\r\n                  <th>IMAGE</th>\r\n                  <th>DELETE</th>\r\n                  <th>UPDATE</th>\r\n                </tr>\r\n                {dishesArray.map((dish: IDishes, index: number) => {\r\n                  return (\r\n                    <tr key={index * 904}>\r\n                      <td>{dish.id}</td>\r\n                      <td>{dish.name}</td>\r\n                      <td>{dish.restaurantId}</td>\r\n                      <td>{dish.rating}</td>\r\n                      <td>{dish.time.join(\", \")}</td>\r\n                      <td>{dish.about}</td>\r\n                      <td>{dish.price}</td>\r\n                      <td>{dish.allergan}</td>\r\n                      <td>\r\n                        {dish.icons.map((icon, index) => (\r\n                          <img key={index * 111} src={icon} />\r\n                        ))}\r\n                      </td>\r\n                      <td>{dish.sides.join(\", \")}</td>\r\n                      <td>{dish.changes.join(\", \")}</td>\r\n                      <td>\r\n                        <a href={dish.img}>{dish.img}</a>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          className=\"delete-btn\"\r\n                          src=\"/image/icons/delete.svg\"\r\n                          alt=\"delete\"\r\n                          onClick={() => handelDeleteDish(dish._id, dish.name)}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src=\"/image/icons/edit.svg\"\r\n                          alt=\"edit\"\r\n                          onClick={() => setOpenEditor(dish.id)}\r\n                        />\r\n                      </td>\r\n                      {openEditor === dish.id && (\r\n                        <EditingData\r\n                        onclose={closeModal}\r\n                          refProps={detailsModalRef}\r\n                          id={dish.id}\r\n                          name={dish.name}\r\n                          restaurantId={dish.restaurantId}\r\n                          rating={dish.rating}\r\n                          _id={dish._id}\r\n                          time={dish.time.join(\",\")}\r\n                          about={dish.about}\r\n                          price={dish.price}\r\n                          allergan={dish.allergan.join(\",\")}\r\n                          icons={dish.icons.join(\",\")}\r\n                          sides={dish.sides.join(\",\")}\r\n                          changes={dish.changes.join(\",\")}\r\n                          img={dish.img}\r\n                        />\r\n                      )}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <button onClick={() => setOpenAdding(true)}>\r\n              <img src=\"/image/icons/add-new.png\" alt=\"add new\" />\r\n            </button>\r\n            {openAdding && (\r\n              <EditingData\r\n              onclose={closeModal}\r\n                refProps={detailsModalRef}\r\n                id={dishesArray.length + 1}\r\n                name={\"\"}\r\n                restaurantId={0}\r\n                rating={\"\"}\r\n                time={\"breakfast,lunch,dinner\"}\r\n                about={\"\"}\r\n                price={0}\r\n                allergan={\"\"}\r\n                icons={\r\n                  \"/image/spicy-small.svg,/image/vegan-small.svg,/image/vegetarian-small.svg\"\r\n                }\r\n                sides={\"\"}\r\n                changes={\"\"}\r\n                img={\"\"}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n         : <h1>you don`t have permission for this page</h1>}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminSystem;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\ChefUtils\\DeletChef.ts",["333"],[],"import axios from \"axios\";\r\n\r\nexport const deleteChef = async (chefId: number) => {\r\n  try {\r\n    const deleteItem = await axios.delete(\"http://localhost:8000/api/chefs\", {\r\n      data: {\r\n        _id: chefId,\r\n      },\r\n      headers: {\r\n        Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n      },\r\n    });\r\n    alert(\"chef deleted \");\r\n  } catch (error: any) {\r\n    alert(error.message);\r\n    console.log(error);\r\n  }\r\n};\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\component\\AdminSystem\\EditingData\\EditingData.tsx",["334","335","336","337","338"],[],"import React, { ReactNode, useEffect, useState } from \"react\";\r\nimport { IChefCard } from \"../../../interFaces/interFaces\";\r\nimport {\r\n  AllInOne,\r\n  IChefs,\r\n  IDishes,\r\n  IRestaurants,\r\n} from \"../../../store/store/store\";\r\nimport { pushingChefToBackend } from \"../../../utils/ChefUtils/AddingChef\";\r\nimport { editExistingChef } from \"../../../utils/ChefUtils/EditChef\";\r\nimport { pushingDishToBackend } from \"../../../utils/DishUtils/addingDish\";\r\nimport { editExistingDish } from \"../../../utils/DishUtils/EditDish\";\r\nimport { pushingRestToBackend } from \"../../../utils/RestaurantUtils/AddingRestaurant\";\r\nimport { editExistingRestaurant } from \"../../../utils/RestaurantUtils/EditRestaurant\";\r\n\r\nimport \"./EditingData.css\";\r\n\r\ntype Props = IRestaurants | IDishes | IChefs;\r\n\r\nconst EditingData: React.FC<AllInOne> = (props: AllInOne) => {\r\n  const [values, setValues] = useState<AllInOne>(props);\r\n\r\n  useEffect(() => {}, []);\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n  const handelSubmit = () => {\r\n    if (values._id) {\r\n      if (values.openHours) {\r\n        editExistingRestaurant(values)\r\n      } else if (values.price) {\r\n        editExistingDish(values)\r\n      } else if (values.restaurant) {\r\n        editExistingChef(values)\r\n      }\r\n    } else  {\r\n      if (values.openHours) {\r\n        pushingRestToBackend(values);\r\n      } else if (values.price) {\r\n        pushingDishToBackend(values);\r\n      } else if (values.restaurant) {\r\n        pushingChefToBackend(values);\r\n      }\r\n    }\r\n    props.onclose();\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div id=\"edit-container\">\r\n        <div ref={props.refProps} id=\"edit-modal\">\r\n          <h1>Add or Update your details</h1>\r\n          <form>\r\n            {Object.keys(props).filter((prop) => prop != \"_id\" && prop != \"refProps\" && prop != \"onclose\").map((propName) => (\r\n              <label key={propName}>\r\n                {propName}\r\n                <input\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  name={propName}\r\n                  value={values[propName as keyof Props] || \"\"}\r\n                />\r\n              </label>\r\n            ))}\r\n          </form>\r\n          <button id=\"submit-btn\" onClick={handelSubmit}>\r\n            SUBMIT CHANGES\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditingData;\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\DishUtils\\DeleteDish.ts",["339"],[],"import axios from \"axios\";\r\n\r\n export const deleteDish = async (dishId: number) => {\r\n    try {\r\n      const deleteItem = await axios.delete(\"http://localhost:8000/api/dishes/delete/oneDish\", {\r\n        data: {\r\n          _id: dishId,\r\n        },\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n        },\r\n      });\r\n      alert(\"dish deleted \");\r\n    } catch (error: any) {\r\n      alert(error.message);\r\n      console.log(error);\r\n    }\r\n  };","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\RestaurantUtils\\DeleteRestaurant.ts",["340","341"],[],"import axios from \"axios\";\r\n\r\nexport const deleteRestaurant = async (restId: number) => {\r\n    try {\r\n      const deleteItem = await axios.delete(\r\n        \"http://localhost:8000/api/restaurants\",\r\n        {\r\n          data: {\r\n            _id: restId,\r\n          },\r\n          headers: {\r\n            Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n          },\r\n        }\r\n      );\r\n        alert(\"delete \")\r\n    } catch (error: any) {\r\n      alert(error.message);\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  export const deleteRestaurantDishes = async (restId: number) => {\r\n    try {\r\n      const deleteItem = await axios.delete(\r\n        \"http://localhost:8000/api/dishes/delete/restaurant-dishes\",\r\n        {\r\n          data: {\r\n            restaurantId: restId,\r\n          },\r\n          headers: {\r\n            Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n          },\r\n        }\r\n      );\r\n        alert(\"dishes delete\")\r\n    } catch (error: any) {\r\n      alert(error.message);\r\n      console.log(error);\r\n    }\r\n  };","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\ChefUtils\\AddingChef.ts",["342","343"],[],"import axios from \"axios\";\r\nimport {\r\n  AllInOne,\r\n  IChefs,\r\n  IDishes,\r\n  IRestaurants,\r\n} from \"../../store/store/store\";\r\n\r\ntype Props = IRestaurants | IDishes | IChefs;\r\nexport const pushingChefToBackend = async (values: AllInOne) => {\r\n  const id = values.id;\r\n  const name = values.name;\r\n  const restaurant = values.restaurant?.split(\",\").map(Number);\r\n  const age = values.age;\r\n  const img = values.img;\r\n  const about = values.about;\r\n\r\n  try {\r\n    const addingChef = await axios.post(\r\n      \"http://localhost:8000/api/chefs/adding\",\r\n       {\r\n          id: id,\r\n          name: name,\r\n          restaurant: restaurant,\r\n          age: age,\r\n          img: img,\r\n          about: about,\r\n        },\r\n        {headers: {\r\n          Authorization:`Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n    alert(\"chef added\");\r\n  } catch (err: any) {\r\n    console.log(err.response.data);\r\n    alert(err.response.data);\r\n  }\r\n};\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\ChefUtils\\EditChef.ts",["344","345"],[],"import axios from \"axios\";\r\nimport {\r\n  AllInOne,\r\n  IChefs,\r\n  IDishes,\r\n  IRestaurants,\r\n} from \"../../store/store/store\";\r\n\r\ntype Props = IRestaurants | IDishes | IChefs;\r\nexport const editExistingChef = async (values: AllInOne) => {\r\n  const id = values.id;\r\n  const name = values.name;\r\n  const restaurant = values.restaurant?.split(\",\").map(Number);\r\n  const age = values.age;\r\n  const img = values.img;\r\n  const about = values.about;\r\n  const _id = values._id;\r\n\r\n  try {\r\n    const addingChef = await axios.post(\r\n      \"http://localhost:8000/api/chefs/edit\",\r\n      {\r\n          id: id,\r\n          name: name,\r\n          restaurant: restaurant,\r\n          age: age,\r\n          img: img,\r\n          about: about,\r\n          _id: _id,\r\n        },\r\n        {headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`\r\n        }\r\n      }\r\n    );\r\n    alert(\"details update\");\r\n  } catch (err: any) {\r\n    console.log(err.response.data);\r\n    alert(err.response.data);\r\n  }\r\n};\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\DishUtils\\addingDish.ts",["346","347"],[],"import axios from \"axios\";\r\nimport {\r\n  AllInOne,\r\n  IChefs,\r\n  IDishes,\r\n  IRestaurants,\r\n} from \"../../store/store/store\";\r\n\r\ntype Props = IRestaurants | IDishes | IChefs;\r\nexport const pushingDishToBackend = async (values: AllInOne) => {\r\n  const id = values.id;\r\n  const name = values.name;\r\n  const restaurantId = Number(values.restaurantId);\r\n  const rating = `/image/rating/${values.rating}.svg`;\r\n  const time = values.time;\r\n  const about = values.about;\r\n  const price = Number(values.price);\r\n  const allergan = values.allergan;\r\n  const icons = values.icons;\r\n  const sides = values.sides;\r\n  const changes = values.changes;\r\n  const img = values.img;\r\n\r\n  \r\n  try {\r\n    const addingDish = await axios.post(\r\n      \"http://localhost:8000/api/dishes/adding\",\r\n      {\r\n        id: id,\r\n        name: name,\r\n        restaurantId: restaurantId,\r\n        rating: rating,\r\n        time: time,\r\n        about: about,\r\n        price: price,\r\n        allergan: allergan,\r\n        icons: icons,\r\n        sides: sides,\r\n        changes: changes,\r\n        img: img,\r\n      },{\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n        },\r\n      }\r\n    );\r\n    alert(\"dish added\");\r\n  } catch (err: any) {\r\n    console.log(err.response.data);\r\n    alert(err.response.data);\r\n  }\r\n};\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\RestaurantUtils\\AddingRestaurant.ts",["348","349"],[],"import axios from \"axios\";\r\nimport {\r\n  AllInOne,\r\n  IChefs,\r\n  IDishes,\r\n  IRestaurants,\r\n} from \"../../store/store/store\";\r\n\r\ntype Props = IRestaurants | IDishes | IChefs;\r\nexport const pushingRestToBackend = async (values: AllInOne) => {\r\n  const id = values.id;\r\n  const name = values.name;\r\n  const chef = values.chef;\r\n  const chefId = Number(values.chefId);\r\n  const img = values.img;\r\n  const rating = `/image/rating/${values.rating}.svg`;\r\n  const address = values.address?.split(\",\").map(Number);\r\n  const openHours = values.openHours?.split(\",\").map(Number);\r\n  const openDays = values.openDays?.split(\",\").map(Number);\r\n  const openYear = Number(values.openYear);\r\n  const dishes = values.dishes?.split(\",\").map(Number);\r\n\r\n  try {\r\n    const addingRest = await axios.post(\r\n      \"http://localhost:8000/api/restaurants/adding\",\r\n      {\r\n        id: id,\r\n        name: name,\r\n        address: address,\r\n        chef: chef,\r\n        chefId: chefId,\r\n        openHours: openHours,\r\n        openDays: openDays,\r\n        openYear: openYear,\r\n        img: img,\r\n        dishes: dishes,\r\n        rating: rating,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n        },\r\n      }\r\n    );\r\n    alert(\"restaurant added\");\r\n  } catch (err: any) {\r\n    console.log(err.response.data);\r\n    alert(err.response.data);\r\n  }\r\n};\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\DishUtils\\EditDish.ts",["350","351"],[],"import axios from \"axios\";\r\nimport {\r\n  AllInOne,\r\n  IChefs,\r\n  IDishes,\r\n  IRestaurants,\r\n} from \"../../store/store/store\";\r\n\r\ntype Props = IRestaurants | IDishes | IChefs;\r\nexport const editExistingDish = async (values: AllInOne) => {\r\n  const id = values.id;\r\n  const name = values.name;\r\n  const restaurantId = Number(values.restaurantId);\r\n  const rating = `/image/rating/${values.rating}.svg`;\r\n  const time = values.time;\r\n  const about = values.about;\r\n  const price = Number(values.price);\r\n  const allergan = values.allergan;\r\n  const icons = values.icons;\r\n  const sides = values.sides;\r\n  const changes = values.changes;\r\n  const img = values.img;\r\n  const _id = values._id;\r\n\r\n\r\n  try {\r\n    const addingChef = await axios.post(\r\n      \"http://localhost:8000/api/dishes/edit\",\r\n      {\r\n        id: id,\r\n        name: name,\r\n        restaurantId: restaurantId,\r\n        rating: rating,\r\n        time: time,\r\n        about: about,\r\n        price: price,\r\n        allergan: allergan,\r\n        icons: icons,\r\n        sides: sides,\r\n        changes: changes,\r\n        img: img,\r\n        _id: _id,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n        },\r\n      }\r\n    );\r\n    alert(\"dish details update\");\r\n  } catch (err: any) {\r\n    console.log(err.response.data);\r\n    alert(err.response.data);\r\n  }\r\n};\r\n","C:\\Users\\erana\\Documents\\gitHub.io\\epicure-project\\front\\src\\utils\\RestaurantUtils\\EditRestaurant.ts",["352","353"],[],"import axios from \"axios\";\r\nimport {\r\n  AllInOne,\r\n  IChefs,\r\n  IDishes,\r\n  IRestaurants,\r\n} from \"../../store/store/store\";\r\n\r\ntype Props = IRestaurants | IDishes | IChefs;\r\nexport const editExistingRestaurant = async (values: AllInOne) => {\r\n  const id = values.id;\r\n  const name = values.name;\r\n  const address = (values.address?.split(',').map(Number));\r\n  const chef = values.chef;\r\n  const chefId = Number(values.chefId);\r\n  const openHours = values.openHours?.split(',').map(Number);\r\n  const openDays = values.openDays?.split(',').map(Number);\r\n  const openYear = Number(values.openYear);\r\n  const img = values.img;\r\n  const rating = `/image/rating/${values.rating}.svg`;\r\n  const dishes = values.dishes?.split(',').map(Number);\r\n  const _id = values._id;\r\n\r\n\r\n  try {\r\n    const addingChef = await axios.post(\r\n      \"http://localhost:8000/api/restaurants/edit\",\r\n      {\r\n        id: id,\r\n        name: name,\r\n        address: address,\r\n        rating: rating,\r\n        chef: chef,\r\n        chefId: chefId,\r\n        openHours: openHours,\r\n        openDays: openDays,\r\n        openYear: openYear,\r\n        dishes: dishes,\r\n        img: img,\r\n        _id: _id,\r\n      },{\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"user-token\")}`,\r\n        },\r\n      }\r\n    );\r\n    alert(\"restaurant details update\");\r\n  } catch (err: any) {\r\n    console.log(err.response.data);\r\n    alert(err.response.data);\r\n  }\r\n};",{"ruleId":"354","severity":1,"message":"355","line":2,"column":40,"nodeType":"356","messageId":"357","endLine":2,"endColumn":49},{"ruleId":"354","severity":1,"message":"358","line":7,"column":8,"nodeType":"356","messageId":"357","endLine":7,"endColumn":22},{"ruleId":"354","severity":1,"message":"359","line":11,"column":22,"nodeType":"356","messageId":"357","endLine":11,"endColumn":27},{"ruleId":"354","severity":1,"message":"360","line":14,"column":21,"nodeType":"356","messageId":"357","endLine":14,"endColumn":34},{"ruleId":"354","severity":1,"message":"361","line":21,"column":9,"nodeType":"356","messageId":"357","endLine":21,"endColumn":23},{"ruleId":"362","severity":1,"message":"363","line":36,"column":18,"nodeType":"364","messageId":"365","endLine":36,"endColumn":20},{"ruleId":"362","severity":1,"message":"363","line":36,"column":33,"nodeType":"364","messageId":"365","endLine":36,"endColumn":35},{"ruleId":"366","severity":1,"message":"367","line":77,"column":27,"nodeType":"368","messageId":"369","endLine":77,"endColumn":29},{"ruleId":"354","severity":1,"message":"370","line":2,"column":17,"nodeType":"356","messageId":"357","endLine":2,"endColumn":25},{"ruleId":"354","severity":1,"message":"371","line":2,"column":27,"nodeType":"356","messageId":"357","endLine":2,"endColumn":41},{"ruleId":"362","severity":1,"message":"363","line":27,"column":16,"nodeType":"364","messageId":"365","endLine":27,"endColumn":18},{"ruleId":"362","severity":1,"message":"363","line":28,"column":13,"nodeType":"364","messageId":"365","endLine":28,"endColumn":15},{"ruleId":"362","severity":1,"message":"363","line":29,"column":17,"nodeType":"364","messageId":"365","endLine":29,"endColumn":19},{"ruleId":"362","severity":1,"message":"363","line":30,"column":16,"nodeType":"364","messageId":"365","endLine":30,"endColumn":18},{"ruleId":"362","severity":1,"message":"363","line":31,"column":15,"nodeType":"364","messageId":"365","endLine":31,"endColumn":17},{"ruleId":"362","severity":1,"message":"363","line":32,"column":13,"nodeType":"364","messageId":"365","endLine":32,"endColumn":15},{"ruleId":"354","severity":1,"message":"372","line":48,"column":13,"nodeType":"356","messageId":"357","endLine":48,"endColumn":29},{"ruleId":"354","severity":1,"message":"373","line":22,"column":11,"nodeType":"356","messageId":"357","endLine":22,"endColumn":19},{"ruleId":"354","severity":1,"message":"374","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":18},{"ruleId":"354","severity":1,"message":"375","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":21},{"ruleId":"354","severity":1,"message":"376","line":3,"column":33,"nodeType":"356","messageId":"357","endLine":3,"endColumn":43},{"ruleId":"354","severity":1,"message":"377","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":25},{"ruleId":"354","severity":1,"message":"378","line":23,"column":13,"nodeType":"356","messageId":"357","endLine":23,"endColumn":23},{"ruleId":"354","severity":1,"message":"378","line":39,"column":13,"nodeType":"356","messageId":"357","endLine":39,"endColumn":23},{"ruleId":"379","severity":1,"message":"380","line":86,"column":13,"nodeType":"381","endLine":86,"endColumn":73},{"ruleId":"382","severity":1,"message":"383","line":29,"column":7,"nodeType":"384","endLine":29,"endColumn":9,"suggestions":"385"},{"ruleId":"382","severity":1,"message":"386","line":55,"column":5,"nodeType":"384","endLine":55,"endColumn":15,"suggestions":"387"},{"ruleId":"354","severity":1,"message":"388","line":2,"column":9,"nodeType":"356","messageId":"357","endLine":2,"endColumn":19},{"ruleId":"354","severity":1,"message":"389","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":18},{"ruleId":"354","severity":1,"message":"390","line":7,"column":8,"nodeType":"356","messageId":"357","endLine":7,"endColumn":16},{"ruleId":"354","severity":1,"message":"391","line":12,"column":11,"nodeType":"356","messageId":"357","endLine":12,"endColumn":18},{"ruleId":"382","severity":1,"message":"392","line":24,"column":6,"nodeType":"384","endLine":24,"endColumn":14,"suggestions":"393"},{"ruleId":"362","severity":1,"message":"363","line":40,"column":25,"nodeType":"364","messageId":"365","endLine":40,"endColumn":27},{"ruleId":"362","severity":1,"message":"363","line":40,"column":39,"nodeType":"364","messageId":"365","endLine":40,"endColumn":41},{"ruleId":"362","severity":1,"message":"363","line":40,"column":53,"nodeType":"364","messageId":"365","endLine":40,"endColumn":55},{"ruleId":"382","severity":1,"message":"394","line":17,"column":6,"nodeType":"384","endLine":17,"endColumn":8,"suggestions":"395"},{"ruleId":"354","severity":1,"message":"396","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":26},{"ruleId":"379","severity":1,"message":"380","line":14,"column":22,"nodeType":"381","endLine":14,"endColumn":70},{"ruleId":"379","severity":1,"message":"380","line":14,"column":73,"nodeType":"381","endLine":14,"endColumn":121},{"ruleId":"354","severity":1,"message":"370","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"371","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":41},{"ruleId":"354","severity":1,"message":"397","line":20,"column":9,"nodeType":"356","messageId":"357","endLine":20,"endColumn":23},{"ruleId":"382","severity":1,"message":"398","line":48,"column":6,"nodeType":"384","endLine":48,"endColumn":8,"suggestions":"399"},{"ruleId":"382","severity":1,"message":"392","line":52,"column":6,"nodeType":"384","endLine":52,"endColumn":14,"suggestions":"400"},{"ruleId":"354","severity":1,"message":"401","line":2,"column":17,"nodeType":"356","messageId":"357","endLine":2,"endColumn":35},{"ruleId":"354","severity":1,"message":"402","line":2,"column":48,"nodeType":"356","messageId":"357","endLine":2,"endColumn":54},{"ruleId":"354","severity":1,"message":"403","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":28},{"ruleId":"354","severity":1,"message":"404","line":17,"column":11,"nodeType":"356","messageId":"357","endLine":17,"endColumn":23},{"ruleId":"382","severity":1,"message":"405","line":44,"column":7,"nodeType":"384","endLine":44,"endColumn":13,"suggestions":"406"},{"ruleId":"382","severity":1,"message":"407","line":49,"column":12,"nodeType":"384","endLine":49,"endColumn":14,"suggestions":"408"},{"ruleId":"379","severity":1,"message":"380","line":82,"column":21,"nodeType":"381","endLine":82,"endColumn":61},{"ruleId":"354","severity":1,"message":"409","line":5,"column":10,"nodeType":"356","messageId":"357","endLine":5,"endColumn":20},{"ruleId":"354","severity":1,"message":"410","line":1,"column":43,"nodeType":"356","messageId":"357","endLine":1,"endColumn":52},{"ruleId":"354","severity":1,"message":"378","line":58,"column":13,"nodeType":"356","messageId":"357","endLine":58,"endColumn":23},{"ruleId":"354","severity":1,"message":"411","line":1,"column":10,"nodeType":"356","messageId":"357","endLine":1,"endColumn":23},{"ruleId":"354","severity":1,"message":"412","line":8,"column":10,"nodeType":"356","messageId":"357","endLine":8,"endColumn":16},{"ruleId":"354","severity":1,"message":"413","line":20,"column":9,"nodeType":"356","messageId":"357","endLine":20,"endColumn":17},{"ruleId":"354","severity":1,"message":"414","line":4,"column":11,"nodeType":"356","messageId":"357","endLine":4,"endColumn":19},{"ruleId":"354","severity":1,"message":"415","line":15,"column":13,"nodeType":"356","messageId":"357","endLine":15,"endColumn":23},{"ruleId":"354","severity":1,"message":"396","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":26},{"ruleId":"354","severity":1,"message":"416","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":19},{"ruleId":"354","severity":1,"message":"417","line":8,"column":3,"nodeType":"356","messageId":"357","endLine":8,"endColumn":13},{"ruleId":"354","severity":1,"message":"418","line":19,"column":8,"nodeType":"356","messageId":"357","endLine":19,"endColumn":14},{"ruleId":"354","severity":1,"message":"373","line":27,"column":9,"nodeType":"356","messageId":"357","endLine":27,"endColumn":17},{"ruleId":"379","severity":1,"message":"380","line":326,"column":27,"nodeType":"381","endLine":326,"endColumn":63},{"ruleId":"354","severity":1,"message":"378","line":5,"column":11,"nodeType":"356","messageId":"357","endLine":5,"endColumn":21},{"ruleId":"354","severity":1,"message":"396","line":1,"column":17,"nodeType":"356","messageId":"357","endLine":1,"endColumn":26},{"ruleId":"354","severity":1,"message":"416","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":19},{"ruleId":"362","severity":1,"message":"363","line":55,"column":55,"nodeType":"364","messageId":"365","endLine":55,"endColumn":57},{"ruleId":"362","severity":1,"message":"363","line":55,"column":72,"nodeType":"364","messageId":"365","endLine":55,"endColumn":74},{"ruleId":"362","severity":1,"message":"363","line":55,"column":94,"nodeType":"364","messageId":"365","endLine":55,"endColumn":96},{"ruleId":"354","severity":1,"message":"378","line":5,"column":13,"nodeType":"356","messageId":"357","endLine":5,"endColumn":23},{"ruleId":"354","severity":1,"message":"378","line":5,"column":13,"nodeType":"356","messageId":"357","endLine":5,"endColumn":23},{"ruleId":"354","severity":1,"message":"378","line":25,"column":13,"nodeType":"356","messageId":"357","endLine":25,"endColumn":23},{"ruleId":"354","severity":1,"message":"419","line":9,"column":6,"nodeType":"356","messageId":"357","endLine":9,"endColumn":11},{"ruleId":"354","severity":1,"message":"420","line":19,"column":11,"nodeType":"356","messageId":"357","endLine":19,"endColumn":21},{"ruleId":"354","severity":1,"message":"419","line":9,"column":6,"nodeType":"356","messageId":"357","endLine":9,"endColumn":11},{"ruleId":"354","severity":1,"message":"420","line":20,"column":11,"nodeType":"356","messageId":"357","endLine":20,"endColumn":21},{"ruleId":"354","severity":1,"message":"419","line":9,"column":6,"nodeType":"356","messageId":"357","endLine":9,"endColumn":11},{"ruleId":"354","severity":1,"message":"415","line":26,"column":11,"nodeType":"356","messageId":"357","endLine":26,"endColumn":21},{"ruleId":"354","severity":1,"message":"419","line":9,"column":6,"nodeType":"356","messageId":"357","endLine":9,"endColumn":11},{"ruleId":"354","severity":1,"message":"421","line":24,"column":11,"nodeType":"356","messageId":"357","endLine":24,"endColumn":21},{"ruleId":"354","severity":1,"message":"419","line":9,"column":6,"nodeType":"356","messageId":"357","endLine":9,"endColumn":11},{"ruleId":"354","severity":1,"message":"420","line":27,"column":11,"nodeType":"356","messageId":"357","endLine":27,"endColumn":21},{"ruleId":"354","severity":1,"message":"419","line":9,"column":6,"nodeType":"356","messageId":"357","endLine":9,"endColumn":11},{"ruleId":"354","severity":1,"message":"420","line":26,"column":11,"nodeType":"356","messageId":"357","endLine":26,"endColumn":21},"@typescript-eslint/no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'loginUserStore' is defined but never used.","'IUser' is defined but never used.","'getCartFromDb' is defined but never used.","'userTokenState' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'userRegisterData' is assigned a value but never used.","'navigate' is assigned a value but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'IRootState' is defined but never used.","'restaurantSlice' is defined but never used.","'deleteItem' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userDataObj'. Either include them or remove the dependency array.","ArrayExpression",["422"],"React Hook useEffect has a missing dependency: 'userSelector?.first'. Either include it or remove the dependency array.",["423"],"'MouseEvent' is defined but never used.","'RenderRest' is defined but never used.","'ChefCard' is defined but never used.","'IRender' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["424"],"React Hook useEffect has a missing dependency: 'kind'. Either include it or remove the dependency array.",["425"],"'ReactNode' is defined but never used.","'specificDishes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.restId'. Either include them or remove the dependency array.",["426"],["427"],"'HtmlHTMLAttributes' is defined but never used.","'useRef' is defined but never used.","'RefactorActionInfo' is defined but never used.","'userSelector' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dishesInCartArray' and 'userCart'. Either include them or remove the dependency array.",["428"],"React Hook useEffect has missing dependencies: 'checkOut' and 'checkoutPrice'. Either include them or remove the dependency array. You can also do a functional update 'setCheckOut(c => ...)' if you only need 'checkOut' in the 'setCheckOut' call.",["429"],"'mainFilter' is defined but never used.","'useEffect' is defined but never used.","'RecordWithTtl' is defined but never used.","'rating' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'IDetails' is defined but never used.","'addingDish' is assigned a value but never used.","'IChefCard' is defined but never used.","'IDishState' is defined but never used.","'Filter' is defined but never used.","'Props' is defined but never used.","'addingChef' is assigned a value but never used.","'addingRest' is assigned a value but never used.",{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"434","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},"Update the dependencies array to be: [dispatch, userDataObj]",{"range":"445","text":"446"},"Update the dependencies array to be: [userName, userSelector?.first]",{"range":"447","text":"448"},"Update the dependencies array to be: [dispatch, filter]",{"range":"449","text":"450"},"Update the dependencies array to be: [kind]",{"range":"451","text":"452"},"Update the dependencies array to be: [dispatch, props.restId]",{"range":"453","text":"454"},{"range":"455","text":"450"},"Update the dependencies array to be: [dishesInCartArray, flag, userCart]",{"range":"456","text":"457"},"Update the dependencies array to be: [checkOut, checkoutPrice]",{"range":"458","text":"459"},[1383,1385],"[dispatch, userDataObj]",[2198,2208],"[userName, userSelector?.first]",[874,882],"[dispatch, filter]",[580,582],"[kind]",[1600,1602],"[dispatch, props.restId]",[1673,1681],[1784,1790],"[dishesInCartArray, flag, userCart]",[1926,1928],"[checkOut, checkoutPrice]"]