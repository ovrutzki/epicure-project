{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet chefs = [];\nconst fetchChefsData = () => {\n  const response = fetch(\"http://localhost:8000/api/chefs\").then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n  return response;\n};\nchefs = await fetchChefsData();\nexport const chefsSlicer = createSlice({\n  name: \"chefs\",\n  initialState: {\n    value: chefs\n  },\n  reducers: {}\n});\nexport default chefsSlicer.reducer;","map":{"version":3,"names":["createSlice","chefs","fetchChefsData","response","fetch","then","json","catch","err","console","log","chefsSlicer","name","initialState","value","reducers","reducer"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/front/src/store/slicer/chefsSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IChefs } from \"../store/store\";\r\n\r\nlet chefs:IChefs[] = [];\r\nconst fetchChefsData = () => {\r\n  const response = fetch(\"http://localhost:8000/api/chefs\")\r\n  .then((response) => {\r\n    return response.json()\r\n  })\r\n  .catch((err) => console.log(err));\r\n  return response;\r\n}\r\n\r\nchefs = await fetchChefsData()\r\n\r\nexport const chefsSlicer = createSlice({\r\n  name: \"chefs\",\r\n  initialState: {\r\n    value: chefs,\r\n  },\r\n  reducers: {},\r\n});\r\n\r\nexport default chefsSlicer.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,IAAIC,KAAc,GAAG,EAAE;AACvB,MAAMC,cAAc,GAAG,MAAM;EAC3B,MAAMC,QAAQ,GAAGC,KAAK,CAAC,iCAAiC,CAAC,CACxDC,IAAI,CAAEF,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACG,IAAI,EAAE;EACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACjC,OAAOL,QAAQ;AACjB,CAAC;AAEDF,KAAK,GAAG,MAAMC,cAAc,EAAE;AAE9B,OAAO,MAAMS,WAAW,GAAGX,WAAW,CAAC;EACrCY,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAEb;EACT,CAAC;EACDc,QAAQ,EAAE,CAAC;AACb,CAAC,CAAC;AAEF,eAAeJ,WAAW,CAACK,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}