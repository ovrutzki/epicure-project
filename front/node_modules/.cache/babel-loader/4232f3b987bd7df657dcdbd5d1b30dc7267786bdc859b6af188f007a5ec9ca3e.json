{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet dishes = [];\nconst fetchDishesData = () => {\n  const response = fetch(\"http://localhost:8000/api/dishes\").then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n  return response;\n};\ndishes = await fetchDishesData();\nexport const orderSlicer = createSlice({\n  name: \"order\",\n  initialState: {\n    allDishes: dishes,\n    value: [],\n    checkoutPrice: 0\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      if (state.value.every(dish => dish.restaurantId === action.payload.restaurantId)) {\n        state.value = [...state.value, action.payload];\n        console.log(state.value);\n        state.checkoutPrice += action.payload.totalPrice;\n      } else {\n        alert(\"we can`t do order from more then 0ne restaurant\");\n      }\n    },\n    deleteFromCart: (state, action) => {\n      // const x = state.value.findIndex((dish) => dish.dishId === action.payload)\n      // delete state.value[x]\n    }\n  }\n});\nexport const {\n  addToCart,\n  deleteFromCart\n} = orderSlicer.actions;\nexport default orderSlicer.reducer;","map":{"version":3,"names":["createSlice","dishes","fetchDishesData","response","fetch","then","json","catch","err","console","log","orderSlicer","name","initialState","allDishes","value","checkoutPrice","reducers","addToCart","state","action","every","dish","restaurantId","payload","totalPrice","alert","deleteFromCart","actions","reducer"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/front/src/store/slicer/orderSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport data from \"../../epicure.json\";\r\nimport { IDishes, IOrder, IOrderState } from \"../store/store\";\r\n\r\nlet dishes:IDishes[] = [];\r\nconst fetchDishesData = () => {\r\n  const response = fetch(\"http://localhost:8000/api/dishes\")\r\n  .then((response) => {\r\n    return response.json()\r\n  })\r\n  .catch((err) => console.log(err));\r\n  return response;\r\n}\r\n\r\ndishes = await fetchDishesData()\r\n\r\nexport const orderSlicer = createSlice({\r\n  name: \"order\",\r\n  initialState: {\r\n    allDishes: dishes,\r\n    value: [],\r\n    checkoutPrice:0,\r\n  },\r\n  reducers: {\r\n    addToCart:(state:IOrder,action) => {\r\n        if(state.value.every((dish:IOrderState) => dish.restaurantId === action.payload.restaurantId)){\r\n            state.value = [...state.value, action.payload]\r\n            console.log(state.value)\r\n            state.checkoutPrice += action.payload.totalPrice\r\n        } else {\r\n            alert(\"we can`t do order from more then 0ne restaurant\")\r\n        }\r\n    },\r\n    deleteFromCart:(state:IOrder,action) =>{\r\n        // const x = state.value.findIndex((dish) => dish.dishId === action.payload)\r\n        // delete state.value[x]\r\n    }\r\n  },\r\n});\r\n\r\nexport const {addToCart, deleteFromCart} = orderSlicer.actions\r\nexport default orderSlicer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAI9C,IAAIC,MAAgB,GAAG,EAAE;AACzB,MAAMC,eAAe,GAAG,MAAM;EAC5B,MAAMC,QAAQ,GAAGC,KAAK,CAAC,kCAAkC,CAAC,CACzDC,IAAI,CAAEF,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACG,IAAI,EAAE;EACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACjC,OAAOL,QAAQ;AACjB,CAAC;AAEDF,MAAM,GAAG,MAAMC,eAAe,EAAE;AAEhC,OAAO,MAAMS,WAAW,GAAGX,WAAW,CAAC;EACrCY,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,SAAS,EAAEb,MAAM;IACjBc,KAAK,EAAE,EAAE;IACTC,aAAa,EAAC;EAChB,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAC,CAACC,KAAY,EAACC,MAAM,KAAK;MAC/B,IAAGD,KAAK,CAACJ,KAAK,CAACM,KAAK,CAAEC,IAAgB,IAAKA,IAAI,CAACC,YAAY,KAAKH,MAAM,CAACI,OAAO,CAACD,YAAY,CAAC,EAAC;QAC1FJ,KAAK,CAACJ,KAAK,GAAG,CAAC,GAAGI,KAAK,CAACJ,KAAK,EAAEK,MAAM,CAACI,OAAO,CAAC;QAC9Cf,OAAO,CAACC,GAAG,CAACS,KAAK,CAACJ,KAAK,CAAC;QACxBI,KAAK,CAACH,aAAa,IAAII,MAAM,CAACI,OAAO,CAACC,UAAU;MACpD,CAAC,MAAM;QACHC,KAAK,CAAC,iDAAiD,CAAC;MAC5D;IACJ,CAAC;IACDC,cAAc,EAAC,CAACR,KAAY,EAACC,MAAM,KAAI;MACnC;MACA;IAAA;EAEN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAACF,SAAS;EAAES;AAAc,CAAC,GAAGhB,WAAW,CAACiB,OAAO;AAC9D,eAAejB,WAAW,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}