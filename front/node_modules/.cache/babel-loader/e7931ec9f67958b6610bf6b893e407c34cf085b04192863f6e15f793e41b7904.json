{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../epicure.json\";\nlet restaurants = [];\nconst fetchRestaurantsData = () => {\n  const response = fetch(\"http://localhost:8000/api/restaurants\").then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n  return response;\n};\nrestaurants = await fetchRestaurantsData();\nconsole.log(restaurants);\nexport const chefsSlicer = createSlice({\n  name: \"chefs\",\n  initialState: {\n    value: data.chefs\n  },\n  reducers: {}\n});\nexport default chefsSlicer.reducer;","map":{"version":3,"names":["createSlice","data","restaurants","fetchRestaurantsData","response","fetch","then","json","catch","err","console","log","chefsSlicer","name","initialState","value","chefs","reducers","reducer"],"sources":["C:/Users/erana/Documents/gitHub.io/epicure-project/front/src/store/slicer/chefsSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport data from \"../../epicure.json\";\r\n\r\nlet restaurants:IChef[] = [];\r\nconst fetchRestaurantsData = () => {\r\n  const response = fetch(\"http://localhost:8000/api/restaurants\")\r\n  .then((response) => {\r\n    return response.json()\r\n  })\r\n  .catch((err) => console.log(err));\r\n  return response;\r\n}\r\n\r\nrestaurants = await fetchRestaurantsData()\r\nconsole.log(restaurants)\r\n\r\nexport const chefsSlicer = createSlice({\r\n  name: \"chefs\",\r\n  initialState: {\r\n    value: data.chefs,\r\n  },\r\n  reducers: {},\r\n});\r\n\r\nexport default chefsSlicer.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,oBAAoB;AAErC,IAAIC,WAAmB,GAAG,EAAE;AAC5B,MAAMC,oBAAoB,GAAG,MAAM;EACjC,MAAMC,QAAQ,GAAGC,KAAK,CAAC,uCAAuC,CAAC,CAC9DC,IAAI,CAAEF,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACG,IAAI,EAAE;EACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACjC,OAAOL,QAAQ;AACjB,CAAC;AAEDF,WAAW,GAAG,MAAMC,oBAAoB,EAAE;AAC1CO,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC;AAExB,OAAO,MAAMU,WAAW,GAAGZ,WAAW,CAAC;EACrCa,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAEd,IAAI,CAACe;EACd,CAAC;EACDC,QAAQ,EAAE,CAAC;AACb,CAAC,CAAC;AAEF,eAAeL,WAAW,CAACM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}